!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$FZF_DEFAULT_COMMAND	nvim/init.vim	/^  let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -g ""'$/;"	v
$FZF_DEFAULT_COMMAND	nvim/init.vim	/^  let $FZF_DEFAULT_COMMAND = 'rg --files --hidden --follow --glob "!.git\/*"'$/;"	v
$FZF_DEFAULT_COMMAND	nvim/init.vim	/^let $FZF_DEFAULT_COMMAND =  "find * -path '*\/\\.*' -prune -o -path 'node_modules\/**' -prune -o -path 'target\/**' -prune -o -path 'dist\/**' -prune -o  -type f -print -o -type l -print 2> \/dev\/null"$/;"	v
$FZF_DEFAULT_COMMAND	vim/vimrc.vim	/^  let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -g ""'$/;"	v
$FZF_DEFAULT_COMMAND	vim/vimrc.vim	/^  let $FZF_DEFAULT_COMMAND = 'rg --files --hidden --follow --glob "!.git\/*"'$/;"	v
$FZF_DEFAULT_COMMAND	vim/vimrc.vim	/^let $FZF_DEFAULT_COMMAND =  "find * -path '*\/\\.*' -prune -o -path 'node_modules\/**' -prune -o -path 'target\/**' -prune -o -path 'dist\/**' -prune -o  -type f -print -o -type l -print 2> \/dev\/null"$/;"	v
<	nvim/init.vim	/^vmap < <gv$/;"	m
<	vim/vimrc.vim	/^vmap < <gv$/;"	m
<A-j>	nvim/init.vim	/^inoremap <A-j> <Esc>:m .+1<CR>==gi$/;"	m
<A-j>	nvim/init.vim	/^nnoremap <A-j> :m .+1<CR>==$/;"	m
<A-j>	nvim/init.vim	/^vnoremap <A-j> :m '>+1<CR>gv=gv$/;"	m
<A-j>	vim/vimrc.vim	/^inoremap <A-j> <Esc>:m .+1<CR>==gi$/;"	m
<A-j>	vim/vimrc.vim	/^nnoremap <A-j> :m .+1<CR>==$/;"	m
<A-j>	vim/vimrc.vim	/^vnoremap <A-j> :m '>+1<CR>gv=gv$/;"	m
<A-k>	nvim/init.vim	/^inoremap <A-k> <Esc>:m .-2<CR>==gi$/;"	m
<A-k>	nvim/init.vim	/^nnoremap <A-k> :m .-2<CR>==$/;"	m
<A-k>	nvim/init.vim	/^vnoremap <A-k> :m '<-2<CR>gv=gv$/;"	m
<A-k>	vim/vimrc.vim	/^inoremap <A-k> <Esc>:m .-2<CR>==gi$/;"	m
<A-k>	vim/vimrc.vim	/^nnoremap <A-k> :m .-2<CR>==$/;"	m
<A-k>	vim/vimrc.vim	/^vnoremap <A-k> :m '<-2<CR>gv=gv$/;"	m
<C-P>	nvim/init.vim	/^cnoremap <C-P> <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<C-P>	vim/vimrc.vim	/^cnoremap <C-P> <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<C-c>	nvim/init.vim	/^  vmap <C-c> :w !pbcopy<CR><CR>$/;"	m
<C-c>	vim/vimrc.vim	/^  vmap <C-c> :w !pbcopy<CR><CR>$/;"	m
<C-h>	nvim/init.vim	/^nnoremap <silent> <C-h> :call WinMove('h')<CR>$/;"	m
<C-h>	vim/vimrc.vim	/^nnoremap <silent> <C-h> :call WinMove('h')<CR>$/;"	m
<C-j>	nvim/init.vim	/^nnoremap <silent> <C-j> :call WinMove('j')<CR>$/;"	m
<C-j>	vim/vimrc.vim	/^nnoremap <silent> <C-j> :call WinMove('j')<CR>$/;"	m
<C-k>	nvim/init.vim	/^nnoremap <silent> <C-k> :call WinMove('k')<CR>$/;"	m
<C-k>	vim/vimrc.vim	/^nnoremap <silent> <C-k> :call WinMove('k')<CR>$/;"	m
<C-l>	nvim/init.vim	/^nnoremap <silent> <C-l> :call WinMove('l')<CR>$/;"	m
<C-l>	vim/vimrc.vim	/^nnoremap <silent> <C-l> :call WinMove('l')<CR>$/;"	m
<C-x>	nvim/init.vim	/^  vmap <C-x> :!pbcopy<CR>$/;"	m
<C-x>	vim/vimrc.vim	/^  vmap <C-x> :!pbcopy<CR>$/;"	m
<F12>	nvim/init.vim	/^map <F12> :tags<cr>$/;"	m
<F12>	vim/vimrc.vim	/^map <F12> :tags<cr>$/;"	m
<F2>	nvim/init.vim	/^nnoremap <silent> <F2> :NERDTreeFind<CR>$/;"	m
<F2>	vim/vimrc.vim	/^nnoremap <silent> <F2> :NERDTreeFind<CR>$/;"	m
<F3>	nvim/init.vim	/^noremap <F3> :NERDTreeToggle<CR>$/;"	m
<F3>	vim/vimrc.vim	/^noremap <F3> :NERDTreeToggle<CR>$/;"	m
<F4>	nvim/init.vim	/^nmap <silent> <F4> :TagbarToggle<CR>$/;"	m
<F4>	vim/vimrc.vim	/^nmap <silent> <F4> :TagbarToggle<CR>$/;"	m
<F5>	nvim/init.vim	/^nnoremap <F5> :call ExecuteFile()<CR>$/;"	m
<F5>	vim/vimrc.vim	/^nnoremap <F5> :call ExecuteFile()<CR>$/;"	m
<Leader>+	nvim/init.vim	/^nnoremap <silent> <Leader>+ :resize +2<CR>$/;"	m
<Leader>+	vim/vimrc.vim	/^nnoremap <silent> <Leader>+ :resize +2<CR>$/;"	m
<Leader>-	nvim/init.vim	/^nnoremap <silent> <Leader>- :resize -2<CR>$/;"	m
<Leader>-	vim/vimrc.vim	/^nnoremap <silent> <Leader>- :resize -2<CR>$/;"	m
<Leader>[	nvim/init.vim	/^nnoremap <silent> <Leader>[ :vertical resize -2<CR>$/;"	m
<Leader>[	vim/vimrc.vim	/^nnoremap <silent> <Leader>[ :vertical resize -2<CR>$/;"	m
<Leader>]	nvim/init.vim	/^nnoremap <silent> <Leader>] :vertical resize +2<CR>$/;"	m
<Leader>]	vim/vimrc.vim	/^nnoremap <silent> <Leader>] :vertical resize +2<CR>$/;"	m
<Leader>a	nvim/init.vim	/^map <Leader>a :call RunAllSpecs()<CR>$/;"	m
<Leader>a	vim/vimrc.vim	/^map <Leader>a :call RunAllSpecs()<CR>$/;"	m
<Leader>e	nvim/init.vim	/^noremap <Leader>e :e <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<Leader>e	vim/vimrc.vim	/^noremap <Leader>e :e <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<Leader>ga	nvim/init.vim	/^noremap <Leader>ga :Gwrite<CR>$/;"	m
<Leader>ga	vim/vimrc.vim	/^noremap <Leader>ga :Gwrite<CR>$/;"	m
<Leader>gb	nvim/init.vim	/^noremap <Leader>gb :Gblame<CR>$/;"	m
<Leader>gb	vim/vimrc.vim	/^noremap <Leader>gb :Gblame<CR>$/;"	m
<Leader>gc	nvim/init.vim	/^noremap <Leader>gc :Gcommit<CR>$/;"	m
<Leader>gc	vim/vimrc.vim	/^noremap <Leader>gc :Gcommit<CR>$/;"	m
<Leader>gd	nvim/init.vim	/^noremap <Leader>gd :Gvdiff<CR>$/;"	m
<Leader>gd	vim/vimrc.vim	/^noremap <Leader>gd :Gvdiff<CR>$/;"	m
<Leader>gll	nvim/init.vim	/^noremap <Leader>gll :Gpull<CR>$/;"	m
<Leader>gll	vim/vimrc.vim	/^noremap <Leader>gll :Gpull<CR>$/;"	m
<Leader>gr	nvim/init.vim	/^noremap <Leader>gr :Gremove<CR>$/;"	m
<Leader>gr	vim/vimrc.vim	/^noremap <Leader>gr :Gremove<CR>$/;"	m
<Leader>gs	nvim/init.vim	/^noremap <Leader>gs :Gstatus<CR>$/;"	m
<Leader>gs	vim/vimrc.vim	/^noremap <Leader>gs :Gstatus<CR>$/;"	m
<Leader>gsh	nvim/init.vim	/^noremap <Leader>gsh :Gpush<CR>$/;"	m
<Leader>gsh	vim/vimrc.vim	/^noremap <Leader>gsh :Gpush<CR>$/;"	m
<Leader>h	nvim/init.vim	/^noremap <Leader>h :<C-u>split<CR>$/;"	m
<Leader>h	vim/vimrc.vim	/^noremap <Leader>h :<C-u>split<CR>$/;"	m
<Leader>l	nvim/init.vim	/^map <Leader>l :call RunLastSpec()<CR>$/;"	m
<Leader>l	vim/vimrc.vim	/^map <Leader>l :call RunLastSpec()<CR>$/;"	m
<Leader>o	nvim/init.vim	/^nnoremap <Leader>o :.Gbrowse<CR>$/;"	m
<Leader>o	vim/vimrc.vim	/^nnoremap <Leader>o :.Gbrowse<CR>$/;"	m
<Leader>s	nvim/init.vim	/^map <Leader>s :call RunNearestSpec()<CR>$/;"	m
<Leader>s	vim/vimrc.vim	/^map <Leader>s :call RunNearestSpec()<CR>$/;"	m
<Leader>t	nvim/init.vim	/^map <Leader>t :call RunCurrentSpecFile()<CR>$/;"	m
<Leader>t	vim/vimrc.vim	/^map <Leader>t :call RunCurrentSpecFile()<CR>$/;"	m
<Leader>te	nvim/init.vim	/^noremap <Leader>te :tabe <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<Leader>te	vim/vimrc.vim	/^noremap <Leader>te :tabe <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<Leader>v	nvim/init.vim	/^noremap <Leader>v :<C-u>vsplit<CR>$/;"	m
<Leader>v	vim/vimrc.vim	/^noremap <Leader>v :<C-u>vsplit<CR>$/;"	m
<S-Tab>	nvim/init.vim	/^nnoremap <S-Tab> gT$/;"	m
<S-Tab>	vim/vimrc.vim	/^nnoremap <S-Tab> gT$/;"	m
<S-t>	nvim/init.vim	/^nnoremap <silent> <S-t> :tabnew<CR>$/;"	m
<S-t>	vim/vimrc.vim	/^nnoremap <silent> <S-t> :tabnew<CR>$/;"	m
<Tab>	nvim/init.vim	/^nnoremap <Tab> gt$/;"	m
<Tab>	vim/vimrc.vim	/^nnoremap <Tab> gt$/;"	m
<leader>.	nvim/init.vim	/^nnoremap <leader>. :lcd %:p:h<CR>$/;"	m
<leader>.	vim/vimrc.vim	/^nnoremap <leader>. :lcd %:p:h<CR>$/;"	m
<leader><space>	nvim/init.vim	/^nnoremap <silent> <leader><space> :noh<cr>$/;"	m
<leader><space>	vim/vimrc.vim	/^nnoremap <silent> <leader><space> :noh<cr>$/;"	m
<leader>b	nvim/init.vim	/^nnoremap <silent> <leader>b :Buffers<CR>$/;"	m
<leader>b	vim/vimrc.vim	/^nnoremap <silent> <leader>b :Buffers<CR>$/;"	m
<leader>c	nvim/init.vim	/^noremap <leader>c :bd<CR>$/;"	m
<leader>c	vim/vimrc.vim	/^noremap <leader>c :bd<CR>$/;"	m
<leader>dc	nvim/init.vim	/^nmap <silent> <leader>dc :call DiffToggle(2)<cr>$/;"	m
<leader>dc	vim/vimrc.vim	/^nmap <silent> <leader>dc :call DiffToggle(2)<cr>$/;"	m
<leader>dl	nvim/init.vim	/^nmap <silent> <leader>dl :call DiffToggle(1)<cr>$/;"	m
<leader>dl	vim/vimrc.vim	/^nmap <silent> <leader>dl :call DiffToggle(1)<cr>$/;"	m
<leader>dr	nvim/init.vim	/^nmap <silent> <leader>dr :call DiffToggle(3)<cr>$/;"	m
<leader>dr	vim/vimrc.vim	/^nmap <silent> <leader>dr :call DiffToggle(3)<cr>$/;"	m
<leader>e	nvim/init.vim	/^nnoremap <silent> <leader>e :FZF -m<CR>$/;"	m
<leader>e	vim/vimrc.vim	/^nnoremap <silent> <leader>e :FZF -m<CR>$/;"	m
<leader>f	nvim/init.vim	/^nnoremap <silent> <leader>f :Rgrep<CR>$/;"	m
<leader>f	vim/vimrc.vim	/^nnoremap <silent> <leader>f :Rgrep<CR>$/;"	m
<leader>p	nvim/init.vim	/^noremap <leader>p "+gP<CR>$/;"	m
<leader>p	vim/vimrc.vim	/^noremap <leader>p "+gP<CR>$/;"	m
<leader>q	nvim/init.vim	/^noremap <leader>q :bp<CR>$/;"	m
<leader>q	vim/vimrc.vim	/^noremap <leader>q :bp<CR>$/;"	m
<leader>rap	nvim/init.vim	/^nnoremap <leader>rap  :RAddParameter<cr>$/;"	m
<leader>rap	vim/vimrc.vim	/^nnoremap <leader>rap  :RAddParameter<cr>$/;"	m
<leader>rcpc	nvim/init.vim	/^nnoremap <leader>rcpc :RConvertPostConditional<cr>$/;"	m
<leader>rcpc	vim/vimrc.vim	/^nnoremap <leader>rcpc :RConvertPostConditional<cr>$/;"	m
<leader>rec	nvim/init.vim	/^vnoremap <leader>rec  :RExtractConstant<cr>$/;"	m
<leader>rec	vim/vimrc.vim	/^vnoremap <leader>rec  :RExtractConstant<cr>$/;"	m
<leader>rel	nvim/init.vim	/^nnoremap <leader>rel  :RExtractLet<cr>$/;"	m
<leader>rel	vim/vimrc.vim	/^nnoremap <leader>rel  :RExtractLet<cr>$/;"	m
<leader>relv	nvim/init.vim	/^vnoremap <leader>relv :RExtractLocalVariable<cr>$/;"	m
<leader>relv	vim/vimrc.vim	/^vnoremap <leader>relv :RExtractLocalVariable<cr>$/;"	m
<leader>rem	nvim/init.vim	/^vnoremap <leader>rem  :RExtractMethod<cr>$/;"	m
<leader>rem	vim/vimrc.vim	/^vnoremap <leader>rem  :RExtractMethod<cr>$/;"	m
<leader>rit	nvim/init.vim	/^nnoremap <leader>rit  :RInlineTemp<cr>$/;"	m
<leader>rit	vim/vimrc.vim	/^nnoremap <leader>rit  :RInlineTemp<cr>$/;"	m
<leader>rriv	nvim/init.vim	/^vnoremap <leader>rriv :RRenameInstanceVariable<cr>$/;"	m
<leader>rriv	vim/vimrc.vim	/^vnoremap <leader>rriv :RRenameInstanceVariable<cr>$/;"	m
<leader>rrlv	nvim/init.vim	/^vnoremap <leader>rrlv :RRenameLocalVariable<cr>$/;"	m
<leader>rrlv	vim/vimrc.vim	/^vnoremap <leader>rrlv :RRenameLocalVariable<cr>$/;"	m
<leader>sc	nvim/init.vim	/^nnoremap <leader>sc :CloseSession<CR>$/;"	m
<leader>sc	vim/vimrc.vim	/^nnoremap <leader>sc :CloseSession<CR>$/;"	m
<leader>sd	nvim/init.vim	/^nnoremap <leader>sd :DeleteSession<CR>$/;"	m
<leader>sd	vim/vimrc.vim	/^nnoremap <leader>sd :DeleteSession<CR>$/;"	m
<leader>sh	nvim/init.vim	/^  nnoremap <silent> <leader>sh :VimShellCreate<CR>$/;"	m
<leader>sh	nvim/init.vim	/^  nnoremap <silent> <leader>sh :terminal<CR>$/;"	m
<leader>sh	vim/vimrc.vim	/^  nnoremap <silent> <leader>sh :VimShellCreate<CR>$/;"	m
<leader>sh	vim/vimrc.vim	/^  nnoremap <silent> <leader>sh :terminal<CR>$/;"	m
<leader>so	nvim/init.vim	/^nnoremap <leader>so :OpenSession<Space>$/;"	m
<leader>so	vim/vimrc.vim	/^nnoremap <leader>so :OpenSession<Space>$/;"	m
<leader>ss	nvim/init.vim	/^nnoremap <leader>ss :SaveSession<Space>$/;"	m
<leader>ss	vim/vimrc.vim	/^nnoremap <leader>ss :SaveSession<Space>$/;"	m
<leader>w	nvim/init.vim	/^noremap <leader>w :bn<CR>$/;"	m
<leader>w	vim/vimrc.vim	/^noremap <leader>w :bn<CR>$/;"	m
<leader>x	nvim/init.vim	/^noremap <leader>x :bn<CR>$/;"	m
<leader>x	vim/vimrc.vim	/^noremap <leader>x :bn<CR>$/;"	m
<leader>z	nvim/init.vim	/^noremap <leader>z :bp<CR>$/;"	m
<leader>z	vim/vimrc.vim	/^noremap <leader>z :bp<CR>$/;"	m
>	nvim/init.vim	/^vmap > >gv$/;"	m
>	vim/vimrc.vim	/^vmap > >gv$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BIN_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DIST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_BUILD_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOC_DIR	zsh/plugins/zsh-syntax-highlighting/Makefile	/^DOC_DIR?=$(DESTDIR)$(PREFIX)\/share\/doc\/$(NAME)$/;"	m
DiffToggle	nvim/init.vim	/^function! DiffToggle(window)$/;"	f
DiffToggle	vim/vimrc.vim	/^function! DiffToggle(window)$/;"	f
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
EXAMPLES_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
ExecuteFile	nvim/init.vim	/^function! ExecuteFile()$/;"	f
ExecuteFile	vim/vimrc.vim	/^function! ExecuteFile()$/;"	f
Find	nvim/init.vim	/^  command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --hidden --follow --glob "!.git\/*" --color "always" '.shellescape(<q-args>).'| tr -d "\\017"', 1, <bang>0)$/;"	c
Find	vim/vimrc.vim	/^  command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --hidden --follow --glob "!.git\/*" --color "always" '.shellescape(<q-args>).'| tr -d "\\017"', 1, <bang>0)$/;"	c
Grep_Default_Options	nvim/init.vim	/^let Grep_Default_Options = '-IR'$/;"	v
Grep_Default_Options	vim/vimrc.vim	/^let Grep_Default_Options = '-IR'$/;"	v
Grep_Skip_Dirs	nvim/init.vim	/^let Grep_Skip_Dirs = '.git node_modules'$/;"	v
Grep_Skip_Dirs	vim/vimrc.vim	/^let Grep_Skip_Dirs = '.git node_modules'$/;"	v
Grep_Skip_Files	nvim/init.vim	/^let Grep_Skip_Files = '*.log *.db'$/;"	v
Grep_Skip_Files	vim/vimrc.vim	/^let Grep_Skip_Files = '*.log *.db'$/;"	v
HEADER_FILES	zsh/plugins/zsh-autosuggestions/Makefile	/^HEADER_FILES := \\$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^HTML_XSL=$(PWD)\/share\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^HTML_XSL=$(PWD)\/share\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTML_XSL	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
HTTParty	zsh/plugins/oh-my-zsh/plugins/cloudapp/cloudapp.rb	/^class HTTParty::Response$/;"	c
INSTALL	zsh/plugins/zsh-syntax-highlighting/Makefile	/^INSTALL?=install -c$/;"	m
J	nvim/init.vim	/^vnoremap J :m '>+1<CR>gv=gv$/;"	m
J	vim/vimrc.vim	/^vnoremap J :m '>+1<CR>gv=gv$/;"	m
K	nvim/init.vim	/^vnoremap K :m '<-2<CR>gv=gv$/;"	m
K	vim/vimrc.vim	/^vnoremap K :m '<-2<CR>gv=gv$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
LIB_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
N	nvim/init.vim	/^nnoremap N Nzzzv$/;"	m
N	vim/vimrc.vim	/^nnoremap N Nzzzv$/;"	m
NAME	zsh/plugins/zsh-syntax-highlighting/Makefile	/^NAME=zsh-syntax-highlighting$/;"	m
PLUGIN_TARGET	zsh/plugins/zsh-autosuggestions/Makefile	/^PLUGIN_TARGET := zsh-autosuggestions.zsh$/;"	m
PREFIX	zsh/plugins/zsh-syntax-highlighting/Makefile	/^PREFIX?=\/usr\/local$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^PROG=shunit2$/;"	m
PROG	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^PROG=shunit2$/;"	m
Q	nvim/init.vim	/^cnoreabbrev Q q$/;"	m
Q	vim/vimrc.vim	/^cnoreabbrev Q q$/;"	m
Q!	nvim/init.vim	/^cnoreabbrev Q! q!$/;"	m
Q!	vim/vimrc.vim	/^cnoreabbrev Q! q!$/;"	m
Qall	nvim/init.vim	/^cnoreabbrev Qall qall$/;"	m
Qall	vim/vimrc.vim	/^cnoreabbrev Qall qall$/;"	m
Qall!	nvim/init.vim	/^cnoreabbrev Qall! qall!$/;"	m
Qall!	vim/vimrc.vim	/^cnoreabbrev Qall! qall!$/;"	m
RunShellCommand	nvim/init.vim	/^function! RunShellCommand(cmdline)$/;"	f
RunShellCommand	vim/vimrc.vim	/^function! RunShellCommand(cmdline)$/;"	f
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh/plugins/zsh-syntax-highlighting/Makefile	/^SHARE_DIR?=$(DESTDIR)$(PREFIX)\/share\/$(NAME)$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHELL_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SHUNIT2	zsh/plugins/zsh-autosuggestions/Makefile	/^SHUNIT2 := $(VENDOR_DIR)\/shunit2\/2.1.6$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/Makefile	/^SRC_DIR    := .\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_FILES	zsh/plugins/zsh-autosuggestions/Makefile	/^SRC_FILES := \\$/;"	m
STUB_SH	zsh/plugins/zsh-autosuggestions/Makefile	/^STUB_SH := $(VENDOR_DIR)\/stub.sh\/stub.sh$/;"	m
Shell	nvim/init.vim	/^command! -complete=shellcmd -nargs=+ Shell call RunShellCommand(<q-args>)$/;"	c
Shell	vim/vimrc.vim	/^command! -complete=shellcmd -nargs=+ Shell call RunShellCommand(<q-args>)$/;"	c
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_PREREQS	zsh/plugins/zsh-autosuggestions/Makefile	/^TEST_PREREQS := \\$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^TEST_SRC_DIR=$(SHELL_SRC_DIR)$/;"	m
TEST_SRC_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^TEST_SRC_DIR=$(SHELL_SRC_DIR)$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TMP_DIR	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TRAPWINCH	zsh/plugins/oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^TRAPWINCH() {$/;"	f
TRAPWINCH	zsh/plugins/vi-mode.plugin.zsh	/^TRAPWINCH() {$/;"	f
VENDOR_DIR	zsh/plugins/zsh-autosuggestions/Makefile	/^VENDOR_DIR := .\/vendor$/;"	m
W	nvim/init.vim	/^cnoreabbrev W w$/;"	m
W	vim/vimrc.vim	/^cnoreabbrev W w$/;"	m
W!	nvim/init.vim	/^cnoreabbrev W! w!$/;"	m
W!	vim/vimrc.vim	/^cnoreabbrev W! w!$/;"	m
WQ	nvim/init.vim	/^cnoreabbrev WQ wq$/;"	m
WQ	vim/vimrc.vim	/^cnoreabbrev WQ wq$/;"	m
Wa	nvim/init.vim	/^cnoreabbrev Wa wa$/;"	m
Wa	vim/vimrc.vim	/^cnoreabbrev Wa wa$/;"	m
WinMove	nvim/init.vim	/^function! WinMove(key)$/;"	f
WinMove	vim/vimrc.vim	/^function! WinMove(key)$/;"	f
Wq	nvim/init.vim	/^cnoreabbrev Wq wq$/;"	m
Wq	vim/vimrc.vim	/^cnoreabbrev Wq wq$/;"	m
XX	nvim/init.vim	/^noremap XX "+x<CR>$/;"	m
XX	vim/vimrc.vim	/^noremap XX "+x<CR>$/;"	m
YY	nvim/init.vim	/^noremap YY "+y<CR>$/;"	m
YY	vim/vimrc.vim	/^noremap YY "+y<CR>$/;"	m
ZSH	zsh/plugins/zsh-syntax-highlighting/Makefile	/^ZSH?=zsh # zsh binary to run tests with$/;"	m
__git_aliased_command	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_aliased_command ()$/;"	f
__git_aliases	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_aliases ()$/;"	f
__git_branch_names	zsh/plugins/oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_branch_names () {$/;"	f
__git_branch_names	zsh/plugins/oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh	/^__git_branch_names () {$/;"	f
__git_branch_names	zsh/plugins/oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_branch_names () {$/;"	f
__git_command_successful	zsh/plugins/oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_command_successful () {$/;"	f
__git_command_successful	zsh/plugins/oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh	/^__git_command_successful () {$/;"	f
__git_command_successful	zsh/plugins/oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_command_successful () {$/;"	f
__git_commands	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_commands () {$/;"	f
__git_complete	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete ()$/;"	f
__git_complete_file	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_file ()$/;"	f
__git_complete_force_with_lease	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_force_with_lease ()$/;"	f
__git_complete_index_file	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_index_file ()$/;"	f
__git_complete_remote_or_refspec	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_remote_or_refspec ()$/;"	f
__git_complete_revlist	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_revlist ()$/;"	f
__git_complete_revlist_file	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_revlist_file ()$/;"	f
__git_complete_strategy	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_strategy ()$/;"	f
__git_compute_all_commands	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_all_commands ()$/;"	f
__git_compute_merge_strategies	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_merge_strategies ()$/;"	f
__git_compute_porcelain_commands	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_porcelain_commands ()$/;"	f
__git_config_get_set_variables	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_config_get_set_variables ()$/;"	f
__git_count_arguments	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_count_arguments ()$/;"	f
__git_eread	zsh/plugins/oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_eread ()$/;"	f
__git_find_on_cmdline	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_find_on_cmdline ()$/;"	f
__git_flow_feature_list	zsh/plugins/oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_flow_feature_list ()$/;"	f
__git_flow_feature_list	zsh/plugins/oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh	/^__git_flow_feature_list ()$/;"	f
__git_flow_hotfix_list	zsh/plugins/oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_flow_hotfix_list ()$/;"	f
__git_flow_hotfix_list	zsh/plugins/oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh	/^__git_flow_hotfix_list ()$/;"	f
__git_flow_version_list	zsh/plugins/oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_flow_version_list ()$/;"	f
__git_flow_version_list	zsh/plugins/oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh	/^__git_flow_version_list ()$/;"	f
__git_func_wrap	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_func_wrap ()$/;"	f
__git_get_config_variables	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_get_config_variables ()$/;"	f
__git_has_doubledash	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_has_doubledash ()$/;"	f
__git_heads	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_heads ()$/;"	f
__git_hf_feature_list	zsh/plugins/oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_hf_feature_list ()$/;"	f
__git_hf_hotfix_list	zsh/plugins/oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_hf_hotfix_list ()$/;"	f
__git_hf_version_list	zsh/plugins/oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_hf_version_list ()$/;"	f
__git_index_files	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_index_files ()$/;"	f
__git_list_all_commands	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_list_all_commands ()$/;"	f
__git_list_merge_strategies	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_list_merge_strategies ()$/;"	f
__git_list_porcelain_commands	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_list_porcelain_commands ()$/;"	f
__git_ls_files_helper	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_ls_files_helper ()$/;"	f
__git_main	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_main ()$/;"	f
__git_match_ctag	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_match_ctag() {$/;"	f
__git_pretty_aliases	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_pretty_aliases ()$/;"	f
__git_ps1	zsh/plugins/oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_ps1 ()$/;"	f
__git_ps1_colorize_gitstring	zsh/plugins/oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_ps1_colorize_gitstring ()$/;"	f
__git_ps1_show_upstream	zsh/plugins/oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_ps1_show_upstream ()$/;"	f
__git_reassemble_comp_words_by_ref	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_reassemble_comp_words_by_ref()$/;"	f
__git_refs	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_refs ()$/;"	f
__git_refs2	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_refs2 ()$/;"	f
__git_refs_remotes	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_refs_remotes ()$/;"	f
__git_remotes	zsh/plugins/oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_remotes () {$/;"	f
__git_remotes	zsh/plugins/oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh	/^__git_remotes () {$/;"	f
__git_remotes	zsh/plugins/oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_remotes () {$/;"	f
__git_remotes	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_remotes ()$/;"	f
__git_tags	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_tags ()$/;"	f
__gitcomp	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^	__gitcomp ()$/;"	f
__gitcomp	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp ()$/;"	f
__gitcomp_file	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^	__gitcomp_file ()$/;"	f
__gitcomp_file	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_file ()$/;"	f
__gitcomp_nl	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^	__gitcomp_nl ()$/;"	f
__gitcomp_nl	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_nl ()$/;"	f
__gitcomp_nl_append	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_nl_append ()$/;"	f
__gitcompadd	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcompadd ()$/;"	f
__gitcompappend	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcompappend ()$/;"	f
__gitdir	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitdir ()$/;"	f
__gitex_author_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_author_names() {$/;"	f
__gitex_branch_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_branch_names() {$/;"	f
__gitex_bug_branch_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_bug_branch_names() {$/;"	f
__gitex_command_successful	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_command_successful () {$/;"	f
__gitex_commits	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_commits() {$/;"	f
__gitex_feature_branch_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_feature_branch_names() {$/;"	f
__gitex_refactor_branch_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_refactor_branch_names() {$/;"	f
__gitex_specific_branch_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_specific_branch_names() {$/;"	f
__gitex_submodule_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_submodule_names() {$/;"	f
__gitex_tag_names	zsh/plugins/oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_tag_names() {$/;"	f
__gitk_main	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitk_main ()$/;"	f
__gnu_utils	zsh/plugins/oh-my-zsh/plugins/gnu-utils/gnu-utils.plugin.zsh	/^  __gnu_utils() {$/;"	f
__go_identifiers	zsh/plugins/oh-my-zsh/plugins/go/go.plugin.zsh	/^  __go_identifiers() {$/;"	f
__go_identifiers	zsh/plugins/oh-my-zsh/plugins/golang/golang.plugin.zsh	/^  __go_identifiers() {$/;"	f
__go_packages	zsh/plugins/oh-my-zsh/plugins/go/go.plugin.zsh	/^  __go_packages() {$/;"	f
__go_packages	zsh/plugins/oh-my-zsh/plugins/golang/golang.plugin.zsh	/^  __go_packages() {$/;"	f
__go_tool_complete	zsh/plugins/oh-my-zsh/plugins/go/go.plugin.zsh	/^__go_tool_complete() {$/;"	f
__go_tool_complete	zsh/plugins/oh-my-zsh/plugins/golang/golang.plugin.zsh	/^__go_tool_complete() {$/;"	f
__grunt	zsh/plugins/oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt() {$/;"	f
__grunt_caching_policy	zsh/plugins/oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_caching_policy() {$/;"	f
__grunt_get_gruntfile	zsh/plugins/oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_get_gruntfile() {$/;"	f
__grunt_get_opts	zsh/plugins/oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_get_opts() {$/;"	f
__grunt_get_tasks	zsh/plugins/oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_get_tasks() {$/;"	f
__grunt_update_cache	zsh/plugins/oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_update_cache() {$/;"	f
__require_tool_fatal	zsh/plugins/oh-my-zsh/tools/require_tool.sh	/^__require_tool_fatal ()$/;"	f
__require_tool_version_compare	zsh/plugins/oh-my-zsh/tools/require_tool.sh	/^__require_tool_version_compare ()$/;"	f
__stub_call	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^__stub_call() {$/;"	f
__stub_clean	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^__stub_clean() {$/;"	f
__stub_index	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^__stub_index() {$/;"	f
__stub_register	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^__stub_register() {$/;"	f
_ant	zsh/plugins/oh-my-zsh/plugins/ant/ant.plugin.zsh	/^_ant () {$/;"	f
_ant_does_target_list_need_generating	zsh/plugins/oh-my-zsh/plugins/ant/ant.plugin.zsh	/^_ant_does_target_list_need_generating () {$/;"	f
_applist	zsh/plugins/oh-my-zsh/plugins/django/django.plugin.zsh	/^_applist() {$/;"	f
_binstubbed	zsh/plugins/oh-my-zsh/plugins/bundler/bundler.plugin.zsh	/^_binstubbed() {$/;"	f
_bower	zsh/plugins/oh-my-zsh/plugins/bower/bower.plugin.zsh	/^_bower ()$/;"	f
_bower_installed_packages	zsh/plugins/oh-my-zsh/plugins/bower/bower.plugin.zsh	/^_bower_installed_packages () {$/;"	f
_cab_commands	zsh/plugins/oh-my-zsh/plugins/cabal/cabal.plugin.zsh	/^function _cab_commands() {$/;"	f
_cabal_commands	zsh/plugins/oh-my-zsh/plugins/cabal/cabal.plugin.zsh	/^function _cabal_commands() {$/;"	f
_cake	zsh/plugins/oh-my-zsh/plugins/cake/cake.plugin.zsh	/^_cake () {$/;"	f
_cake_does_target_list_need_generating	zsh/plugins/oh-my-zsh/plugins/cake/cake.plugin.zsh	/^_cake_does_target_list_need_generating () {$/;"	f
_cake_get_target_list	zsh/plugins/oh-my-zsh/plugins/cake/cake.plugin.zsh	/^_cake_get_target_list () {$/;"	f
_cakephp3	zsh/plugins/oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3 () {$/;"	f
_cakephp3_get_3rd_argument	zsh/plugins/oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3_get_3rd_argument () {$/;"	f
_cakephp3_get_command_list	zsh/plugins/oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3_get_command_list () {$/;"	f
_cakephp3_get_sub_command_list	zsh/plugins/oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3_get_sub_command_list () {$/;"	f
_chruby	zsh/plugins/oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^_chruby() { compadd $(chruby | tr -d '* ') }$/;"	f
_chruby_dirs	zsh/plugins/oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^_chruby_dirs() {$/;"	f
_completemarks	zsh/plugins/oh-my-zsh/plugins/jump/jump.plugin.zsh	/^_completemarks() {$/;"	f
_composer	zsh/plugins/oh-my-zsh/plugins/composer/composer.plugin.zsh	/^_composer () {$/;"	f
_composer_get_command_list	zsh/plugins/oh-my-zsh/plugins/composer/composer.plugin.zsh	/^_composer_get_command_list () {$/;"	f
_composer_get_required_list	zsh/plugins/oh-my-zsh/plugins/composer/composer.plugin.zsh	/^_composer_get_required_list () {$/;"	f
_current_epoch	zsh/plugins/oh-my-zsh/tools/check_for_upgrade.sh	/^function _current_epoch() {$/;"	f
_emacsfun	zsh/plugins/oh-my-zsh/plugins/emacs/emacsclient.sh	/^_emacsfun()$/;"	f
_end_paste	zsh/plugins/oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^function _end_paste() {$/;"	f
_enumerateGrailsScripts	zsh/plugins/oh-my-zsh/plugins/grails/grails.plugin.zsh	/^_enumerateGrailsScripts() {$/;"	f
_fossil	zsh/plugins/oh-my-zsh/plugins/fossil/fossil.plugin.zsh	/^function _fossil () {$/;"	f
_fossil_get_command_list	zsh/plugins/oh-my-zsh/plugins/fossil/fossil.plugin.zsh	/^function _fossil_get_command_list () {$/;"	f
_fossil_prompt	zsh/plugins/oh-my-zsh/plugins/fossil/fossil.plugin.zsh	/^function _fossil_prompt () {$/;"	f
_frontend	zsh/plugins/oh-my-zsh/plugins/frontend-search/_frontend-search.sh	/^function _frontend() {$/;"	f
_get_comp_words_by_ref	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_get_comp_words_by_ref ()$/;"	f
_git	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^	_git ()$/;"	f
_git	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git ()$/;"	f
_git_add	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_add ()$/;"	f
_git_am	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_am ()$/;"	f
_git_apply	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_apply ()$/;"	f
_git_archive	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_archive ()$/;"	f
_git_bisect	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_bisect ()$/;"	f
_git_branch	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_branch ()$/;"	f
_git_bundle	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_bundle ()$/;"	f
_git_checkout	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_checkout ()$/;"	f
_git_cherry	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_cherry ()$/;"	f
_git_cherry_pick	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_cherry_pick ()$/;"	f
_git_clean	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_clean ()$/;"	f
_git_clone	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_clone ()$/;"	f
_git_commit	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_commit ()$/;"	f
_git_config	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_config ()$/;"	f
_git_describe	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_describe ()$/;"	f
_git_diff	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_diff ()$/;"	f
_git_difftool	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_difftool ()$/;"	f
_git_fetch	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_fetch ()$/;"	f
_git_format_patch	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_format_patch ()$/;"	f
_git_fsck	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_fsck ()$/;"	f
_git_gc	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_gc ()$/;"	f
_git_gitk	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_gitk ()$/;"	f
_git_grep	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_grep ()$/;"	f
_git_help	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_help ()$/;"	f
_git_init	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_init ()$/;"	f
_git_log	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_log ()$/;"	f
_git_log_prettily	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^function _git_log_prettily(){$/;"	f
_git_ls_files	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_ls_files ()$/;"	f
_git_ls_remote	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_ls_remote ()$/;"	f
_git_ls_tree	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_ls_tree ()$/;"	f
_git_merge	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_merge ()$/;"	f
_git_merge_base	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_merge_base ()$/;"	f
_git_mergetool	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_mergetool ()$/;"	f
_git_mv	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_mv ()$/;"	f
_git_name_rev	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_name_rev ()$/;"	f
_git_notes	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_notes ()$/;"	f
_git_pull	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_pull ()$/;"	f
_git_push	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_push ()$/;"	f
_git_rebase	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_rebase ()$/;"	f
_git_reflog	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_reflog ()$/;"	f
_git_remote	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_remote ()$/;"	f
_git_remote_branch	zsh/plugins/oh-my-zsh/plugins/git-remote-branch/git-remote-branch.plugin.zsh	/^_git_remote_branch() {$/;"	f
_git_replace	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_replace ()$/;"	f
_git_reset	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_reset ()$/;"	f
_git_revert	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_revert ()$/;"	f
_git_rm	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_rm ()$/;"	f
_git_send_email	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_send_email ()$/;"	f
_git_shortlog	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_shortlog ()$/;"	f
_git_show	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_show ()$/;"	f
_git_show_branch	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_show_branch ()$/;"	f
_git_stage	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_stage ()$/;"	f
_git_stash	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_stash ()$/;"	f
_git_submodule	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_submodule ()$/;"	f
_git_svn	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_svn ()$/;"	f
_git_tag	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_tag ()$/;"	f
_git_whatchanged	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_whatchanged ()$/;"	f
_gitignoreio	zsh/plugins/oh-my-zsh/plugins/gitignore/gitignore.plugin.zsh	/^_gitignoreio () {$/;"	f
_gitignoreio_get_command_list	zsh/plugins/oh-my-zsh/plugins/gitignore/gitignore.plugin.zsh	/^_gitignoreio_get_command_list() {$/;"	f
_gitk	zsh/plugins/oh-my-zsh/plugins/gitfast/git-completion.bash	/^_gitk ()$/;"	f
_gradle_arguments	zsh/plugins/oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^function _gradle_arguments() {$/;"	f
_gradle_core_commands	zsh/plugins/oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^function _gradle_core_commands() {$/;"	f
_gradle_does_task_list_need_generating	zsh/plugins/oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^_gradle_does_task_list_need_generating () {$/;"	f
_gradle_parse_and_extract_tasks	zsh/plugins/oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^_gradle_parse_and_extract_tasks () {$/;"	f
_gradle_parse_tasks	zsh/plugins/oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^_gradle_parse_tasks () {$/;"	f
_gradle_tasks	zsh/plugins/oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^_gradle_tasks () {$/;"	f
_gradlew_tasks	zsh/plugins/oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^_gradlew_tasks () {$/;"	f
_grails	zsh/plugins/oh-my-zsh/plugins/grails/grails.plugin.zsh	/^_grails() {$/;"	f
_httpie_completion	zsh/plugins/oh-my-zsh/plugins/httpie/httpie.plugin.zsh	/^function _httpie_completion() {$/;"	f
_is_rails_app	zsh/plugins/oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_is_rails_app () {$/;"	f
_jake	zsh/plugins/oh-my-zsh/plugins/jake-node/jake-node.plugin.zsh	/^function _jake () {$/;"	f
_jira_query	zsh/plugins/oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function _jira_query() {$/;"	f
_jira_url_help	zsh/plugins/oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function _jira_url_help() {$/;"	f
_knife_ssh	zsh/plugins/oh-my-zsh/plugins/knife_ssh/knife_ssh.plugin.zsh	/^_knife_ssh() {$/;"	f
_laravel4	zsh/plugins/oh-my-zsh/plugins/laravel4/laravel4.plugin.zsh	/^_laravel4 () {$/;"	f
_laravel4_get_command_list	zsh/plugins/oh-my-zsh/plugins/laravel4/laravel4.plugin.zsh	/^_laravel4_get_command_list () {$/;"	f
_laravel5	zsh/plugins/oh-my-zsh/plugins/laravel5/laravel5.plugin.zsh	/^_laravel5 () {$/;"	f
_laravel5_get_command_list	zsh/plugins/oh-my-zsh/plugins/laravel5/laravel5.plugin.zsh	/^_laravel5_get_command_list () {$/;"	f
_lein_commands	zsh/plugins/oh-my-zsh/plugins/lein/lein.plugin.zsh	/^function _lein_commands() {$/;"	f
_managepy	zsh/plugins/oh-my-zsh/plugins/django/django.plugin.zsh	/^_managepy() {$/;"	f
_managepy_cmds	zsh/plugins/oh-my-zsh/plugins/django/django.plugin.zsh	/^_managepy_cmds(){$/;"	f
_mark_expansion	zsh/plugins/oh-my-zsh/plugins/jump/jump.plugin.zsh	/^_mark_expansion() {$/;"	f
_mix	zsh/plugins/oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix () {$/;"	f
_mix_does_task_list_need_generating	zsh/plugins/oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix_does_task_list_need_generating () {$/;"	f
_mix_generate	zsh/plugins/oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix_generate () {$/;"	f
_mix_refresh	zsh/plugins/oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix_refresh () {$/;"	f
_n98_magerun	zsh/plugins/oh-my-zsh/plugins/n98-magerun/n98-magerun.plugin.zsh	/^_n98_magerun () {$/;"	f
_n98_magerun_get_command_list	zsh/plugins/oh-my-zsh/plugins/n98-magerun/n98-magerun.plugin.zsh	/^_n98_magerun_get_command_list () {$/;"	f
_ng_completion	zsh/plugins/oh-my-zsh/plugins/ng/ng.plugin.zsh	/^_ng_completion () {$/;"	f
_omz_diag_dump_check_core_commands	zsh/plugins/oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_check_core_commands() {$/;"	f
_omz_diag_dump_echo_file_w_header	zsh/plugins/oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_echo_file_w_header() {$/;"	f
_omz_diag_dump_one_big_text	zsh/plugins/oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_one_big_text() {$/;"	f
_omz_diag_dump_os_specific_version	zsh/plugins/oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_os_specific_version() {$/;"	f
_omz_osx_get_frontmost_app	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function _omz_osx_get_frontmost_app() {$/;"	f
_omz_xcode_list_versions	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_list_versions {$/;"	f
_omz_xcode_locate_versions	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_locate_versions {$/;"	f
_omz_xcode_parse_versioned_file	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_parse_versioned_file {$/;"	f
_omz_xcode_print_active_version	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_print_active_version {$/;"	f
_omz_xcode_print_xcselv_usage	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_print_xcselv_usage {$/;"	f
_paste_insert	zsh/plugins/oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^function _paste_insert() {$/;"	f
_paver	zsh/plugins/oh-my-zsh/plugins/paver/paver.plugin.zsh	/^_paver () {$/;"	f
_paver_does_target_list_need_generating	zsh/plugins/oh-my-zsh/plugins/paver/paver.plugin.zsh	/^_paver_does_target_list_need_generating () {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-addhistory() {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-change-directory() {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-set-directory-history() {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-set-global-history() {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-addhistory() {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-change-directory() {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-set-directory-history() {$/;"	f
_per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-set-global-history() {$/;"	f
_phing	zsh/plugins/oh-my-zsh/plugins/phing/phing.plugin.zsh	/^_phing () {$/;"	f
_pj	zsh/plugins/oh-my-zsh/plugins/pj/pj.plugin.zsh	/^_pj () {$/;"	f
_rails_command	zsh/plugins/oh-my-zsh/plugins/rails/rails.plugin.zsh	/^function _rails_command () {$/;"	f
_rake	zsh/plugins/oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake () {$/;"	f
_rake_command	zsh/plugins/oh-my-zsh/plugins/rails/rails.plugin.zsh	/^function _rake_command () {$/;"	f
_rake_does_task_list_need_generating	zsh/plugins/oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake_does_task_list_need_generating () {$/;"	f
_rake_generate	zsh/plugins/oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake_generate () {$/;"	f
_rb18	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^_rb18() {compadd `ls -1 $rvm_path\/gems | grep "^$ruby18@" | sed -e "s\/^$ruby18@\/\/" | awk '{print $1}'`}$/;"	f
_rb19	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^_rb19() {compadd `ls -1 $rvm_path\/gems | grep "^$ruby19@" | sed -e "s\/^$ruby19@\/\/" | awk '{print $1}'`}$/;"	f
_rb20	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^_rb20() {compadd `ls -1 $rvm_path\/gems | grep "^$ruby20@" | sed -e "s\/^$ruby20@\/\/" | awk '{print $1}'`}$/;"	f
_rb21	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^_rb21() {compadd `ls -1 $rvm_path\/gems | grep "^$ruby21@" | sed -e "s\/^$ruby21@\/\/" | awk '{print $1}'`}$/;"	f
_rbfu_rubies_print	zsh/plugins/oh-my-zsh/plugins/rbfu/rbfu.plugin.zsh	/^  function _rbfu_rubies_print() {$/;"	f
_rvm_completion	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function _rvm_completion {$/;"	f
_scd_Y19oug_abspath	zsh/plugins/oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_abspath() {$/;"	f
_scd_Y19oug_action	zsh/plugins/oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_action() {$/;"	f
_scd_Y19oug_compress	zsh/plugins/oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_compress() {$/;"	f
_scd_Y19oug_match	zsh/plugins/oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_match() {$/;"	f
_scd_Y19oug_record	zsh/plugins/oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_record() {$/;"	f
_shunit_assertFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_assertFail()$/;"	f
_shunit_assertPass	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_assertPass()$/;"	f
_shunit_assertSkip	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_assertSkip()$/;"	f
_shunit_cleanup	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_cleanup()$/;"	f
_shunit_error	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_error() { echo "shunit2:ERROR $@" >&2; }$/;"	f
_shunit_escapeCharInStr	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_escapeCharInStr()$/;"	f
_shunit_escapeCharactersInString	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_escapeCharactersInString()$/;"	f
_shunit_execSuite	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_execSuite()$/;"	f
_shunit_extractTestFunctions	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_extractTestFunctions()$/;"	f
_shunit_fatal	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_fatal() { echo "shunit2:FATAL $@" >&2; exit ${SHUNIT_ERROR}; }$/;"	f
_shunit_generateReport	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_generateReport()$/;"	f
_shunit_mktempDir	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_mktempDir()$/;"	f
_shunit_mktempFunc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_mktempFunc()$/;"	f
_shunit_prepForSourcing	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_prepForSourcing()$/;"	f
_shunit_shouldSkip	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_shouldSkip()$/;"	f
_shunit_warn	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^_shunit_warn() { echo "shunit2:WARN $@" >&2; }$/;"	f
_source_from_omz_settings	zsh/plugins/oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^_source_from_omz_settings() {$/;"	f
_stack_commands	zsh/plugins/oh-my-zsh/plugins/stack/stack.plugin.zsh	/^function _stack_commands() {$/;"	f
_start_agent	zsh/plugins/oh-my-zsh/plugins/ssh-agent/ssh-agent.plugin.zsh	/^function _start_agent() {$/;"	f
_start_paste	zsh/plugins/oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^function _start_paste() {$/;"	f
_symfony	zsh/plugins/oh-my-zsh/plugins/symfony/symfony.plugin.zsh	/^_symfony () {$/;"	f
_symfony2	zsh/plugins/oh-my-zsh/plugins/symfony2/symfony2.plugin.zsh	/^_symfony2 () {$/;"	f
_symfony2_get_command_list	zsh/plugins/oh-my-zsh/plugins/symfony2/symfony2.plugin.zsh	/^_symfony2_get_command_list () {$/;"	f
_symfony_console	zsh/plugins/oh-my-zsh/plugins/symfony2/symfony2.plugin.zsh	/^_symfony_console () {$/;"	f
_symfony_get_command_list	zsh/plugins/oh-my-zsh/plugins/symfony/symfony.plugin.zsh	/^_symfony_get_command_list () {$/;"	f
_tasks_changed	zsh/plugins/oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_tasks_changed () {$/;"	f
_update_zsh_update	zsh/plugins/oh-my-zsh/tools/check_for_upgrade.sh	/^function _update_zsh_update() {$/;"	f
_upgrade_zsh	zsh/plugins/oh-my-zsh/tools/check_for_upgrade.sh	/^function _upgrade_zsh() {$/;"	f
_versions_have_strings	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^_versions_have_strings()$/;"	f
_wd	zsh/plugins/oh-my-zsh/plugins/wd/_wd.sh	/^function _wd() {$/;"	f
_wp_complete	zsh/plugins/oh-my-zsh/plugins/wp-cli/wp-cli.plugin.zsh	/^_wp_complete() {$/;"	f
_yarn	zsh/plugins/oh-my-zsh/plugins/yarn/yarn.plugin.zsh	/^_yarn ()$/;"	f
_yii	zsh/plugins/oh-my-zsh/plugins/yii/yii.plugin.zsh	/^_yii () {$/;"	f
_yii2	zsh/plugins/oh-my-zsh/plugins/yii2/yii2.plugin.zsh	/^_yii2 () {$/;"	f
_yii2_format_command	zsh/plugins/oh-my-zsh/plugins/yii2/yii2.plugin.zsh	/^_yii2_format_command () {$/;"	f
_yii_get_command_list	zsh/plugins/oh-my-zsh/plugins/yii/yii.plugin.zsh	/^_yii_get_command_list () {$/;"	f
_z	zsh/plugins/oh-my-zsh/plugins/z/z.sh	/^_z() {$/;"	f
_z_precmd	zsh/plugins/oh-my-zsh/plugins/z/z.sh	/^            _z_precmd() {$/;"	f
_z_zsh_tab_completion	zsh/plugins/oh-my-zsh/plugins/z/z.sh	/^    _z_zsh_tab_completion() {$/;"	f
_zle_line_finish	zsh/plugins/oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^function _zle_line_finish() {$/;"	f
_zle_line_init	zsh/plugins/oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^function _zle_line_init() {$/;"	f
_zsh_autosuggest_accept	zsh/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_accept	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_bind_widget	zsh/plugins/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widget	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widgets	zsh/plugins/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_bind_widgets	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_check_deprecated_config	zsh/plugins/zsh-autosuggestions/src/deprecated.zsh	/^_zsh_autosuggest_check_deprecated_config() {$/;"	f
_zsh_autosuggest_check_deprecated_config	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_check_deprecated_config() {$/;"	f
_zsh_autosuggest_clear	zsh/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_clear	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_deprecated_start_widget	zsh/plugins/zsh-autosuggestions/src/deprecated.zsh	/^_zsh_autosuggest_deprecated_start_widget() {$/;"	f
_zsh_autosuggest_deprecated_start_widget	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_deprecated_start_widget() {$/;"	f
_zsh_autosuggest_deprecated_warning	zsh/plugins/zsh-autosuggestions/src/deprecated.zsh	/^_zsh_autosuggest_deprecated_warning() {$/;"	f
_zsh_autosuggest_deprecated_warning	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_deprecated_warning() {$/;"	f
_zsh_autosuggest_escape_command	zsh/plugins/zsh-autosuggestions/src/suggestion.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_escape_command	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_execute	zsh/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_execute	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_highlight_apply	zsh/plugins/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_apply	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_reset	zsh/plugins/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_highlight_reset	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_invoke_original_widget	zsh/plugins/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_invoke_original_widget	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_modify	zsh/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_modify	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_partial_accept	zsh/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_partial_accept	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_start	zsh/plugins/zsh-autosuggestions/src/start.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_start	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_strategy_default	zsh/plugins/zsh-autosuggestions/src/strategies/default.zsh	/^_zsh_autosuggest_strategy_default() {$/;"	f
_zsh_autosuggest_strategy_default	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_default() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	zsh/plugins/zsh-autosuggestions/src/strategies/match_prev_cmd.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_suggestion	zsh/plugins/zsh-autosuggestions/src/suggestion.zsh	/^_zsh_autosuggest_suggestion() {$/;"	f
_zsh_autosuggest_suggestion	zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_suggestion() {$/;"	f
_zsh_highlight	zsh/plugins/oh-my-zsh/plugins/history-substring-search/history-substring-search.zsh	/^  _zsh_highlight() {$/;"	f
_zsh_highlight	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh/plugins/zsh-syntax-highlighting/highlighters/main/test-data/inheritance.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh/plugins/zsh-syntax-highlighting/tests/generate.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_apply_zle_highlight	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_apply_zle_highlight() {$/;"	f
_zsh_highlight_bind_widgets	zsh/plugins/oh-my-zsh/plugins/history-substring-search/history-substring-search.zsh	/^  _zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_bind_widgets	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_brackets_match	zsh/plugins/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_brackets_match()$/;"	f
_zsh_highlight_buffer_modified	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_buffer_modified()$/;"	f
_zsh_highlight_call_widget	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_call_widget()$/;"	f
_zsh_highlight_cursor_moved	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_cursor_moved()$/;"	f
_zsh_highlight_highlighter_brackets_paint	zsh/plugins/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_paint()$/;"	f
_zsh_highlight_highlighter_brackets_predicate	zsh/plugins/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_predicate()$/;"	f
_zsh_highlight_highlighter_cursor_paint	zsh/plugins/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_paint()$/;"	f
_zsh_highlight_highlighter_cursor_predicate	zsh/plugins/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_predicate()$/;"	f
_zsh_highlight_highlighter_line_paint	zsh/plugins/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_paint()$/;"	f
_zsh_highlight_highlighter_line_predicate	zsh/plugins/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_predicate()$/;"	f
_zsh_highlight_highlighter_main_paint	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_paint()$/;"	f
_zsh_highlight_highlighter_main_predicate	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_predicate()$/;"	f
_zsh_highlight_highlighter_pattern_paint	zsh/plugins/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_paint()$/;"	f
_zsh_highlight_highlighter_pattern_predicate	zsh/plugins/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_predicate()$/;"	f
_zsh_highlight_highlighter_root_paint	zsh/plugins/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_paint()$/;"	f
_zsh_highlight_highlighter_root_predicate	zsh/plugins/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_predicate()$/;"	f
_zsh_highlight_load_highlighters	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_load_highlighters()$/;"	f
_zsh_highlight_main__is_redirection	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_redirection() {$/;"	f
_zsh_highlight_main__precmd_hook	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__precmd_hook() {$/;"	f
_zsh_highlight_main__resolve_alias	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__resolve_alias() {$/;"	f
_zsh_highlight_main__stack_pop	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__stack_pop() {$/;"	f
_zsh_highlight_main__type	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__type() {$/;"	f
_zsh_highlight_main_add_region_highlight	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_region_highlight() {$/;"	f
_zsh_highlight_main_highlighter_check_assign	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_assign()$/;"	f
_zsh_highlight_main_highlighter_check_path	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_path()$/;"	f
_zsh_highlight_main_highlighter_expand_path	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_expand_path()$/;"	f
_zsh_highlight_main_highlighter_highlight_dollar_string	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_dollar_string()$/;"	f
_zsh_highlight_main_highlighter_highlight_path_separators	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_path_separators()$/;"	f
_zsh_highlight_main_highlighter_highlight_string	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_string()$/;"	f
_zsh_highlight_pattern_highlighter_loop	zsh/plugins/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_pattern_highlighter_loop()$/;"	f
_zsh_highlight_preexec_hook	zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_preexec_hook()$/;"	f
_zsh_tmux_plugin_run	zsh/plugins/oh-my-zsh/plugins/tmux/tmux.plugin.zsh	/^	function _zsh_tmux_plugin_run()$/;"	f
aar	zsh/plugins/oh-my-zsh/plugins/ubuntu/ubuntu.plugin.zsh	/^aar() {$/;"	f
abd	zsh/plugins/oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    abd() {$/;"	f
accessip10	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^accessip10() {$/;"	f
acss	zsh/plugins/oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^acss() {$/;"	f
add_sudo	zsh/keybindings.sh	/^	function add_sudo() {$/;"	f
advanced_usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with <span><strong class="command">shunit<\/strong><\/span>.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="advanced_usage"><\/a>Chapter 3. Advanced Usage<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/div><p>This chapter covers several advanced usage topics.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="test_skipping"><\/a>1. Test Skipping<\/h2><\/div><\/div><\/div><p>There are times where the test code you have written is just not applicable to the system you are running on. This section describes how to skip these tests but maintain the total test count.<\/p><p>Probably the easiest example would be shell code that is meant to run under the <span><strong class="command">bash<\/strong><\/span> shell, but the unit test is running under the Bourne shell. There are things that just won't work. The following test code demonstrates two sample functions, one that will be run under any shell, and the another that will run only under the <span><strong class="command">bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_include"><\/a><p class="title"><b>Example 3.1. <code class="filename">math.inc<\/code> -- math include<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
advanced_usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with shUnit2.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="advanced_usage"><\/a>Chapter 3. Advanced Usage<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/div><p>This chapter covers several advanced usage topics.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="test_skipping"><\/a>1. Test Skipping<\/h2><\/div><\/div><\/div><p>There are times where the test code you have written is just not applicable to the system you are running on. This section describes how to skip these tests but maintain the total test count.<\/p><p>Probably the easiest example would be shell code that is meant to run under the <span><strong class="command">bash<\/strong><\/span> shell, but the unit test is running under the Bourne shell. There are things that just won't work. The following test code demonstrates two sample functions, one that will be run under any shell, and the another that will run only under the <span><strong class="command">bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_include"><\/a><p class="title"><b>Example 3.1. <code class="filename">math.inc<\/code> -- math include<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
advanced_usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with shUnit2.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a class="ulink" href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="advanced_usage"><\/a>Chapter 3. Advanced Usage<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/div><p>This chapter covers several advanced usage topics.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="test_skipping"><\/a>1. Test Skipping<\/h2><\/div><\/div><\/div><p>There are times where the test code you have written is just not applicable to the system you are running on. This section describes how to skip these tests but maintain the total test count.<\/p><p>Probably the easiest example would be shell code that is meant to run under the <span class="command"><strong>bash<\/strong><\/span> shell, but the unit test is running under the Bourne shell. There are things that just won't work. The following test code demonstrates two sample functions, one that will be run under any shell, and the another that will run only under the <span class="command"><strong>bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_include"><\/a><p class="title"><b>Example 3.1. <code class="filename">math.inc<\/code> -- math include<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
advanced_usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with shUnit2.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a class="ulink" href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="advanced_usage"><\/a>Chapter 3. Advanced Usage<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/div><p>This chapter covers several advanced usage topics.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="test_skipping"><\/a>1. Test Skipping<\/h2><\/div><\/div><\/div><p>There are times where the test code you have written is just not applicable to the system you are running on. This section describes how to skip these tests but maintain the total test count.<\/p><p>Probably the easiest example would be shell code that is meant to run under the <span class="command"><strong>bash<\/strong><\/span> shell, but the unit test is running under the Bourne shell. There are things that just won't work. The following test code demonstrates two sample functions, one that will be run under any shell, and the another that will run only under the <span class="command"><strong>bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_include"><\/a><p class="title"><b>Example 3.1. <code class="filename">math.inc<\/code> -- math include<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
advanced_usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with shUnit2.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a class="ulink" href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="advanced_usage"><\/a>Chapter 3. Advanced Usage<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#line_numbers">2. Including Line Numbers in Asserts<\/a><\/span><\/dt><\/dl><\/div><p>This chapter covers several advanced usage topics.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="test_skipping"><\/a>1. Test Skipping<\/h2><\/div><\/div><\/div><p>There are times where the test code you have written is just not applicable to the system you are running on. This section describes how to skip these tests but maintain the total test count.<\/p><p>Probably the easiest example would be shell code that is meant to run under the <span class="command"><strong>bash<\/strong><\/span> shell, but the unit test is running under the Bourne shell. There are things that just won't work. The following test code demonstrates two sample functions, one that will be run under any shell, and the another that will run only under the <span class="command"><strong>bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_include"><\/a><p class="title"><b>Example 3.1. <code class="filename">math.inc<\/code> -- math include<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
agp	zsh/plugins/oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function agp {$/;"	f
ahead	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                        ahead = int(div[len('ahead '):].strip())$/;"	v
ai	zsh/plugins/oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    ai() {$/;"	f
ajs	zsh/plugins/oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^ajs() {$/;"	f
alias1	zsh/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^alias1() {} # to check that it's highlighted as an alias, not as a function$/;"	f
alias_value	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function alias_value() {$/;"	f
ap	zsh/plugins/oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    ap() {$/;"	f
appendix	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="appendix"><\/a>Chapter 5. Appendix<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shell_errata">1. Shell Errata<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#zsh">1.1. ZSH<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shell_errata"><\/a>1. Shell Errata<\/h2><\/div><\/div><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h3 class="title"><a name="zsh"><\/a>1.1. ZSH<\/h3><\/div><\/div><\/div><p>For compatibility with ZSH, there are two requirements that must be met.<\/p><div class="orderedlist"><ol type="I"><li><p>The <code class="option">shwordsplit<\/code> option must be set. There are three ways to accomplish this.<\/p><div class="orderedlist"><ol type="i"><li><p>In the unit-test script, add the following shell code before sourcing the <span class="command"><strong>shunit2<\/strong><\/span> library.<\/p><pre class="programlisting">emulate -LR sh<\/pre><\/li><li><p>When invoking <span class="command"><strong>zsh<\/strong><\/span> from either the command-line or as a script with <code class="code">#!<\/code>, add the <em class="parameter"><code>-y<\/code><\/em> parameter.<\/p><pre class="programlisting">#! \/bin\/zsh -y<\/pre><\/li><li><p>When invoking <span class="command"><strong>zsh<\/strong><\/span> from the command-line, add <em class="parameter"><code>-o shwordsplit --<\/code><\/em> as parameters before the script name.<\/p><pre class="programlisting">$ zsh -o shwordsplit -- some_script<\/pre><\/li><\/ol><\/div><\/li><li><p>The <code class="option">function_argzero<\/code> option must be unset. In the unit-test script, add the following shell code before sourcing the <span class="command"><strong>shunit2<\/strong><\/span> library.<\/p><pre class="programlisting">unsetopt function_argzero<\/pre><\/li><\/ol><\/div><\/div><\/div><\/div><\/div><\/body><\/html>$/;"	a
appendix	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="appendix"><\/a>Chapter 5. Appendix<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shell_errata">1. Shell Errata<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#zsh">1.1. ZSH<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shell_errata"><\/a>1. Shell Errata<\/h2><\/div><\/div><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h3 class="title"><a name="zsh"><\/a>1.1. ZSH<\/h3><\/div><\/div><\/div><p>For compatibility with ZSH, there are two requirements that must be met.<\/p><div class="orderedlist"><ol type="I"><li><p>The <code class="option">shwordsplit<\/code> option must be set. There are three ways to accomplish this.<\/p><div class="orderedlist"><ol type="i"><li><p>In the unit-test script, add the following shell code before sourcing the <span class="command"><strong>shunit2<\/strong><\/span> library.<\/p><pre class="programlisting">emulate -LR sh<\/pre><\/li><li><p>When invoking <span class="command"><strong>zsh<\/strong><\/span> from either the command-line or as a script with <code class="code">#!<\/code>, add the <em class="parameter"><code>-y<\/code><\/em> parameter.<\/p><pre class="programlisting">#! \/bin\/zsh -y<\/pre><\/li><li><p>When invoking <span class="command"><strong>zsh<\/strong><\/span> from the command-line, add <em class="parameter"><code>-o shwordsplit --<\/code><\/em> as parameters before the script name.<\/p><pre class="programlisting">$ zsh -o shwordsplit -- some_script<\/pre><\/li><\/ol><\/div><\/li><li><p>The <code class="option">function_argzero<\/code> option must be unset. In the unit-test script, add the following shell code before sourcing the <span class="command"><strong>shunit2<\/strong><\/span> library.<\/p><pre class="programlisting">unsetopt function_argzero<\/pre><\/li><\/ol><\/div><\/div><\/div><\/div><\/div><\/body><\/html>$/;"	a
appendix	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="appendix"><\/a>Chapter 5. Appendix<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shell_errata">1. Shell Errata<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#zsh">1.1. ZSH<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shell_errata"><\/a>1. Shell Errata<\/h2><\/div><\/div><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h3 class="title"><a name="zsh"><\/a>1.1. ZSH<\/h3><\/div><\/div><\/div><p>For compatibility with ZSH, there are two requirements that must be met.<\/p><div class="orderedlist"><ol type="I"><li><p>The <code class="option">shwordsplit<\/code> option must be set. There are three ways to accomplish this.<\/p><div class="orderedlist"><ol type="i"><li><p>In the unit-test script, add the following shell code before sourcing the <span class="command"><strong>shunit2<\/strong><\/span> library.<\/p><pre class="programlisting">setopt shwordsplit<\/pre><\/li><li><p>When invoking <span class="command"><strong>zsh<\/strong><\/span> from either the command-line or as a script with <code class="code">#!<\/code>, add the <em class="parameter"><code>-y<\/code><\/em> parameter.<\/p><pre class="programlisting">#! \/bin\/zsh -y<\/pre><\/li><li><p>When invoking <span class="command"><strong>zsh<\/strong><\/span> from the command-line, add <em class="parameter"><code>-o shwordsplit --<\/code><\/em> as parameters before the script name.<\/p><pre class="programlisting">$ zsh -o shwordsplit -- some_script<\/pre><\/li><\/ol><\/div><\/li><\/ol><\/div><\/div><\/div><\/div><\/div><\/body><\/html>$/;"	a
apt	zsh/plugins/oh-my-zsh/plugins/debian/debian.plugin.zsh	/^function apt-list-packages {$/;"	f
apt	zsh/plugins/oh-my-zsh/plugins/ubuntu/ubuntu.plugin.zsh	/^function apt-list-packages {$/;"	f
apt_pref_compdef	zsh/plugins/oh-my-zsh/plugins/debian/debian.plugin.zsh	/^apt_pref_compdef() {$/;"	f
ar	zsh/plugins/oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    ar() {$/;"	f
arg0	zsh/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^        function arg0$/;"	f
asp	zsh/plugins/oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function asp {$/;"	f
assertBackslashSuggestion	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^assertBackslashSuggestion() {$/;"	f
assertDoubleBackslashSuggestion	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^assertDoubleBackslashSuggestion() {$/;"	f
assertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertEquals()$/;"	f
assertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertFalse()$/;"	f
assertHashSuggestion	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^assertHashSuggestion() {$/;"	f
assertNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertNotEquals()$/;"	f
assertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertNotNull()$/;"	f
assertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertNotSame()$/;"	f
assertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertNull()$/;"	f
assertParenthesesSuggestion	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^assertParenthesesSuggestion() {$/;"	f
assertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertSame()$/;"	f
assertSquareBracketsSuggestion	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^assertSquareBracketsSuggestion() {$/;"	f
assertSuggestion	zsh/plugins/zsh-autosuggestions/test/test_helper.zsh	/^assertSuggestion() {$/;"	f
assertTildeSuggestion	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^assertTildeSuggestion() {$/;"	f
assertTildeSuggestionWithExtendedGlob	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^assertTildeSuggestionWithExtendedGlob() {$/;"	f
assertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^assertTrue()$/;"	f
aws_profiles	zsh/plugins/oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function aws_profiles {$/;"	f
banner	zsh/plugins/oh-my-zsh/tools/theme_chooser.sh	/^function banner() {$/;"	f
battery_is_charging	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_is_charging() {$/;"	f
battery_level_gauge	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^function battery_level_gauge() {$/;"	f
battery_pct	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct() {$/;"	f
battery_pct_prompt	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct_prompt () {$/;"	f
battery_pct_prompt	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct_prompt() {$/;"	f
battery_pct_remaining	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct_remaining() {$/;"	f
battery_time_remaining	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_time_remaining() {$/;"	f
bb	zsh/plugins/oh-my-zsh/plugins/bbedit/bbedit.plugin.zsh	/^function bb() {$/;"	f
behind	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                        behind = int(div[len('behind '):].strip())$/;"	v
bgnotify	zsh/plugins/oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^bgnotify () { ## args: (title, subtitle)$/;"	f
bgnotify_begin	zsh/plugins/oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^bgnotify_begin() {$/;"	f
bgnotify_end	zsh/plugins/oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^bgnotify_end() {$/;"	f
bgnotify_formatted	zsh/plugins/oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^  function bgnotify_formatted { ## args: (exit_status, command, elapsed_seconds)$/;"	f
branch	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^            branch = get_tagname_or_hash()$/;"	v
branch	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^            branch = st[2].split(' ')[-1]$/;"	v
branch	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^            branch = st[2].strip()$/;"	v
branch_prompt_info	zsh/plugins/oh-my-zsh/plugins/branch/branch.plugin.zsh	/^function branch_prompt_info() {$/;"	f
build_go_files	nvim/init.vim	/^function! s:build_go_files()$/;"	f
build_go_files	vim/vimrc.vim	/^function! s:build_go_files()$/;"	f
bundle_install	zsh/plugins/oh-my-zsh/plugins/bundler/bundler.plugin.zsh	/^bundle_install() {$/;"	f
bzr_prompt_info	zsh/plugins/oh-my-zsh/lib/bzr.zsh	/^function bzr_prompt_info() {$/;"	f
c	zsh/zshrc.sh	/^	c() {$/;"	f
c404	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^c404() {$/;"	f
cabal_sandbox_info	zsh/plugins/oh-my-zsh/plugins/cabal/cabal.plugin.zsh	/^function cabal_sandbox_info() {$/;"	f
callvim	zsh/plugins/oh-my-zsh/plugins/vim-interaction/vim-interaction.plugin.zsh	/^function callvim$/;"	f
catimg	zsh/plugins/oh-my-zsh/plugins/catimg/catimg.plugin.zsh	/^function catimg() {$/;"	f
cd	zsh/plugins/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^cd() {$/;"	f
cdf	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function cdf() {$/;"	f
cecho	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^  cecho(){$/;"	f
cf	zsh/plugins/oh-my-zsh/plugins/coffee/coffee.plugin.zsh	/^cf () {$/;"	f
cfc	zsh/plugins/oh-my-zsh/plugins/coffee/coffee.plugin.zsh	/^cfc () {$/;"	f
check-in-all-the-code	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="check-in-all-the-code" name="check-in-all-the-code">Check In All the Code<\/a><\/h2>$/;"	a
chpwd_dirhistory	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function chpwd_dirhistory() {$/;"	f
chpwd_dirpersist	zsh/plugins/oh-my-zsh/plugins/dirpersist/dirpersist.plugin.zsh	/^chpwd_dirpersist() {$/;"	f
chpwd_last_working_dir	zsh/plugins/oh-my-zsh/plugins/last-working-dir/last-working-dir.plugin.zsh	/^chpwd_last_working_dir() {$/;"	f
chpwd_update_git_vars	zsh/plugins/oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function chpwd_update_git_vars() {$/;"	f
chruby_prompt_info	zsh/plugins/oh-my-zsh/lib/prompt_info_functions.zsh	/^function chruby_prompt_info hg_prompt_info pyenv_prompt_info \\$/;"	f
chruby_prompt_info	zsh/plugins/oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^function chruby_prompt_info() {$/;"	f
clipcopy	zsh/plugins/oh-my-zsh/lib/clipboard.zsh	/^function clipcopy() {$/;"	f
clippaste	zsh/plugins/oh-my-zsh/lib/clipboard.zsh	/^function clippaste() {$/;"	f
clrz	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^clrz() {$/;"	f
colorize_via_pygmentize	zsh/plugins/oh-my-zsh/plugins/colorize/colorize.plugin.zsh	/^colorize_via_pygmentize() {$/;"	f
command_not_found_handler	zsh/plugins/oh-my-zsh/plugins/command-not-found/command-not-found.plugin.zsh	/^    command_not_found_handler () {$/;"	f
common	zsh/plugins/oh-my-zsh/plugins/z/z.sh	/^            function common(matches) {$/;"	f
commonEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^commonEqualsSame()$/;"	f
commonEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^commonEqualsSame()$/;"	f
commonEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^commonEqualsSame()$/;"	f
commonEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^commonEqualsSame()$/;"	f
commonEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^commonEqualsSame()$/;"	f
commonEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^commonEqualsSame()$/;"	f
commonEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^commonEqualsSame()$/;"	f
commonNotEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testFailures	/^commonNotEqualsSame()$/;"	f
commonNotEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testFailures	/^commonNotEqualsSame()$/;"	f
commonNotEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testFailures	/^commonNotEqualsSame()$/;"	f
commonNotEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testFailures	/^commonNotEqualsSame()$/;"	f
commonNotEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^commonNotEqualsSame()$/;"	f
commonNotEqualsSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^commonNotEqualsSame()$/;"	f
completion_preview_close	nvim/init.vim	/^augroup completion_preview_close$/;"	a
completion_preview_close	vim/vimrc.vim	/^augroup completion_preview_close$/;"	a
con80	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^con80() {$/;"	f
conssec	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^conssec() {$/;"	f
consume100	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^consume100() {$/;"	f
copybuffer	zsh/plugins/oh-my-zsh/plugins/copybuffer/copybuffer.plugin.zsh	/^copybuffer () {$/;"	f
copydir	zsh/plugins/oh-my-zsh/plugins/copydir/copydir.plugin.zsh	/^function copydir {$/;"	f
copyfile	zsh/plugins/oh-my-zsh/plugins/copyfile/copyfile.plugin.zsh	/^function copyfile {$/;"	f
cpv	zsh/plugins/oh-my-zsh/plugins/cp/cp.plugin.zsh	/^cpv() {$/;"	f
create-tarball	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="create-tarball" name="create-tarball">Create Tarball<\/a><\/h2>$/;"	a
currentWindowId	zsh/plugins/oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^currentWindowId () {$/;"	f
current_branch	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^function current_branch() {$/;"	f
current_gemset	zsh/plugins/oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^    function current_gemset() {$/;"	f
current_repository	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^function current_repository() {$/;"	f
current_ruby	zsh/plugins/oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^function current_ruby() {$/;"	f
current_ruby	zsh/plugins/oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^    function current_ruby() {$/;"	f
d0	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^d0() {$/;"	f
decode64	zsh/plugins/oh-my-zsh/plugins/encode64/encode64.plugin.zsh	/^decode64() {$/;"	f
default	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function default() {$/;"	f
description	zsh/plugins/oh-my-zsh/plugins/sprunge/sprunge.plugin.zsh	/^description() {$/;"	f
die	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/bin/gen_test_results.sh	/^die()$/;"	f
die	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/bin/gen_test_results.sh	/^die()$/;"	f
dirhistory_back	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_back() {$/;"	f
dirhistory_cd	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_cd(){$/;"	f
dirhistory_forward	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_forward() {$/;"	f
dirhistory_zle_dirhistory_back	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_zle_dirhistory_back() {$/;"	f
dirhistory_zle_dirhistory_future	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_zle_dirhistory_future() {$/;"	f
display_emoji	zsh/plugins/oh-my-zsh/plugins/emoji/emoji.plugin.zsh	/^function display_emoji() {$/;"	f
display_emotty	zsh/plugins/oh-my-zsh/plugins/emotty/emotty.plugin.zsh	/^function display_emotty() {$/;"	f
divergence	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                divergence = ' '.join(rest.split(' ')[1:])$/;"	v
divergence	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                divergence = divergence.lstrip('[').rstrip(']')$/;"	v
dls	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^dls () {$/;"	f
droplr	zsh/plugins/oh-my-zsh/plugins/droplr/droplr.plugin.zsh	/^droplr() {$/;"	f
ecd	zsh/plugins/oh-my-zsh/plugins/emacs/emacs.plugin.zsh	/^    function ecd {$/;"	f
edit_and_run	zsh/keybindings.sh	/^	function edit_and_run() {$/;"	f
efile	zsh/plugins/oh-my-zsh/plugins/emacs/emacs.plugin.zsh	/^    function efile {$/;"	f
emoji	zsh/plugins/oh-my-zsh/plugins/emoji-clock/emoji-clock.plugin.zsh	/^function emoji-clock() {$/;"	f
emotty	zsh/plugins/oh-my-zsh/plugins/emotty/emotty.plugin.zsh	/^function emotty() {$/;"	f
empty_gh	zsh/plugins/oh-my-zsh/plugins/github/github.plugin.zsh	/^empty_gh() { # [NAME_OF_REPO]$/;"	f
encode64	zsh/plugins/oh-my-zsh/plugins/encode64/encode64.plugin.zsh	/^encode64() {$/;"	f
endSkipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^endSkipping()$/;"	f
ensure_chruby	zsh/plugins/oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^function ensure_chruby() {$/;"	f
env_default	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function env_default() {$/;"	f
erlang_folding	nvim/init.vim	/^let erlang_folding = 1$/;"	v
erlang_folding	vim/vimrc.vim	/^let erlang_folding = 1$/;"	v
erlang_show_errors	nvim/init.vim	/^let erlang_show_errors = 1$/;"	v
erlang_show_errors	vim/vimrc.vim	/^let erlang_show_errors = 1$/;"	v
ex:math_test	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^      <\/pre><\/div><\/div><br class="example-break"><p>And here is a corresponding unit test that correctly skips the <code class="function">add_bash()<\/code> function when the unit test is not running under the <span><strong class="command">bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_test"><\/a><p class="title"><b>Example 3.2. <code class="filename">math_test<\/code> -- math unit test<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
ex:math_test	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^      <\/pre><\/div><\/div><br class="example-break"><p>And here is a corresponding unit test that correctly skips the <code class="function">add_bash()<\/code> function when the unit test is not running under the <span><strong class="command">bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_test"><\/a><p class="title"><b>Example 3.2. <code class="filename">math_test<\/code> -- math unit test<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
ex:math_test	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^      <\/pre><\/div><\/div><br class="example-break"><p>And here is a corresponding unit test that correctly skips the <code class="function">add_bash()<\/code> function when the unit test is not running under the <span class="command"><strong>bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_test"><\/a><p class="title"><b>Example 3.2. <code class="filename">math_test<\/code> -- math unit test<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
ex:math_test	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^      <\/pre><\/div><\/div><br class="example-break"><p>And here is a corresponding unit test that correctly skips the <code class="function">add_bash()<\/code> function when the unit test is not running under the <span class="command"><strong>bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_test"><\/a><p class="title"><b>Example 3.2. <code class="filename">math_test<\/code> -- math unit test<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
ex:math_test	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^      <\/pre><\/div><\/div><br class="example-break"><p>And here is a corresponding unit test that correctly skips the <code class="function">add_bash()<\/code> function when the unit test is not running under the <span class="command"><strong>bash<\/strong><\/span> shell.<\/p><div class="example"><a name="ex:math_test"><\/a><p class="title"><b>Example 3.2. <code class="filename">math_test<\/code> -- math unit test<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
exist_gh	zsh/plugins/oh-my-zsh/plugins/github/github.plugin.zsh	/^exist_gh() { # [DIRECTORY]$/;"	f
export-the-release	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="export-the-release" name="export-the-release">Export the Release<\/a><\/h2>$/;"	a
extract	zsh/plugins/oh-my-zsh/plugins/extract/extract.plugin.zsh	/^extract() {$/;"	f
f	zsh/plugins/zsh-syntax-highlighting/highlighters/main/test-data/off-by-one.zsh	/^f() {}$/;"	f
fail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^fail()$/;"	f
failNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^failNotEquals()$/;"	f
failNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^failNotSame()$/;"	f
failSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^failSame()$/;"	f
fastfile	zsh/plugins/oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile() {$/;"	f
fastfile_get	zsh/plugins/oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_get() {$/;"	f
fastfile_ls	zsh/plugins/oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_ls() {$/;"	f
fastfile_print	zsh/plugins/oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_print() {$/;"	f
fastfile_resolv	zsh/plugins/oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_resolv() {$/;"	f
fastfile_rm	zsh/plugins/oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_rm() {$/;"	f
fastfile_sync	zsh/plugins/oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_sync() {$/;"	f
fcss	zsh/plugins/oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^fcss() {$/;"	f
find_project	zsh/plugins/oh-my-zsh/plugins/sublime/sublime.plugin.zsh	/^find_project()$/;"	f
finish-documentation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="finish-documentation" name="finish-documentation">Finish Documentation<\/a><\/h2>$/;"	a
fixperms	zsh/plugins/oh-my-zsh/plugins/perms/perms.plugin.zsh	/^fixperms () {$/;"	f
fjs	zsh/plugins/oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^fjs() {$/;"	f
fl	zsh/plugins/oh-my-zsh/plugins/forklift/forklift.plugin.zsh	/^function fl {$/;"	f
fossil_prompt_info	zsh/plugins/oh-my-zsh/plugins/fossil/fossil.plugin.zsh	/^function fossil_prompt_info () {$/;"	f
frecent	zsh/plugins/oh-my-zsh/plugins/z/z.sh	/^            function frecent(rank, time) {$/;"	f
frontend	zsh/plugins/oh-my-zsh/plugins/frontend-search/frontend-search.plugin.zsh	/^function frontend() {$/;"	f
fwl	zsh/plugins/oh-my-zsh/plugins/firewalld/firewalld.plugin.zsh	/^function fwl () {$/;"	f
g:CSApprox_loaded	nvim/init.vim	/^  let g:CSApprox_loaded = 1$/;"	v
g:CSApprox_loaded	vim/vimrc.vim	/^  let g:CSApprox_loaded = 1$/;"	v
g:NERDTreeChDirMode	nvim/init.vim	/^let g:NERDTreeChDirMode=2$/;"	v
g:NERDTreeChDirMode	vim/vimrc.vim	/^let g:NERDTreeChDirMode=2$/;"	v
g:NERDTreeIgnore	nvim/init.vim	/^let g:NERDTreeIgnore=['\\.rbc$', '\\~$', '\\.pyc$', '\\.db$', '\\.sqlite$', '__pycache__']$/;"	v
g:NERDTreeIgnore	vim/vimrc.vim	/^let g:NERDTreeIgnore=['\\.rbc$', '\\~$', '\\.pyc$', '\\.db$', '\\.sqlite$', '__pycache__']$/;"	v
g:NERDTreeMapOpenInTabSilent	nvim/init.vim	/^let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'$/;"	v
g:NERDTreeMapOpenInTabSilent	vim/vimrc.vim	/^let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'$/;"	v
g:NERDTreeShowBookmarks	nvim/init.vim	/^let g:NERDTreeShowBookmarks=1$/;"	v
g:NERDTreeShowBookmarks	vim/vimrc.vim	/^let g:NERDTreeShowBookmarks=1$/;"	v
g:NERDTreeSortOrder	nvim/init.vim	/^let g:NERDTreeSortOrder=['^__\\.py$', '\\\/$', '*', '\\.swp$', '\\.bak$', '\\~$']$/;"	v
g:NERDTreeSortOrder	vim/vimrc.vim	/^let g:NERDTreeSortOrder=['^__\\.py$', '\\\/$', '*', '\\.swp$', '\\.bak$', '\\~$']$/;"	v
g:NERDTreeWinSize	nvim/init.vim	/^let g:NERDTreeWinSize = 50$/;"	v
g:NERDTreeWinSize	vim/vimrc.vim	/^let g:NERDTreeWinSize = 50$/;"	v
g:UltiSnipsEditSplit	nvim/init.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsExpandTrigger	nvim/init.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	nvim/init.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-b>"$/;"	v
g:UltiSnipsJumpForwardTrigger	nvim/init.vim	/^let g:UltiSnipsJumpForwardTrigger="<tab>"$/;"	v
g:airline#extensions#branch#enabled	nvim/init.vim	/^let g:airline#extensions#branch#enabled = 1$/;"	v
g:airline#extensions#branch#enabled	vim/vimrc.vim	/^let g:airline#extensions#branch#enabled = 1$/;"	v
g:airline#extensions#branch#prefix	nvim/init.vim	/^  let g:airline#extensions#branch#prefix     = '⤴' "➔, ➥, ⎇$/;"	v
g:airline#extensions#branch#prefix	vim/vimrc.vim	/^  let g:airline#extensions#branch#prefix     = '⤴' "➔, ➥, ⎇$/;"	v
g:airline#extensions#linecolumn#prefix	nvim/init.vim	/^  let g:airline#extensions#linecolumn#prefix = '¶'$/;"	v
g:airline#extensions#linecolumn#prefix	vim/vimrc.vim	/^  let g:airline#extensions#linecolumn#prefix = '¶'$/;"	v
g:airline#extensions#paste#symbol	nvim/init.vim	/^  let g:airline#extensions#paste#symbol      = 'ρ'$/;"	v
g:airline#extensions#paste#symbol	vim/vimrc.vim	/^  let g:airline#extensions#paste#symbol      = 'ρ'$/;"	v
g:airline#extensions#readonly#symbol	nvim/init.vim	/^  let g:airline#extensions#readonly#symbol   = '⊘'$/;"	v
g:airline#extensions#readonly#symbol	vim/vimrc.vim	/^  let g:airline#extensions#readonly#symbol   = '⊘'$/;"	v
g:airline#extensions#syntastic#enabled	nvim/init.vim	/^let g:airline#extensions#syntastic#enabled = 1$/;"	v
g:airline#extensions#syntastic#enabled	vim/vimrc.vim	/^let g:airline#extensions#syntastic#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	nvim/init.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	vim/vimrc.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#left_alt_sep	nvim/init.vim	/^  let g:airline#extensions#tabline#left_alt_sep = '|'$/;"	v
g:airline#extensions#tabline#left_alt_sep	nvim/init.vim	/^  let g:airline#extensions#tabline#left_alt_sep = ''$/;"	v
g:airline#extensions#tabline#left_alt_sep	vim/vimrc.vim	/^  let g:airline#extensions#tabline#left_alt_sep = '|'$/;"	v
g:airline#extensions#tabline#left_alt_sep	vim/vimrc.vim	/^  let g:airline#extensions#tabline#left_alt_sep = ''$/;"	v
g:airline#extensions#tabline#left_sep	nvim/init.vim	/^  let g:airline#extensions#tabline#left_sep = ' '$/;"	v
g:airline#extensions#tabline#left_sep	nvim/init.vim	/^  let g:airline#extensions#tabline#left_sep = ''$/;"	v
g:airline#extensions#tabline#left_sep	vim/vimrc.vim	/^  let g:airline#extensions#tabline#left_sep = ' '$/;"	v
g:airline#extensions#tabline#left_sep	vim/vimrc.vim	/^  let g:airline#extensions#tabline#left_sep = ''$/;"	v
g:airline#extensions#tagbar#enabled	nvim/init.vim	/^let g:airline#extensions#tagbar#enabled = 1$/;"	v
g:airline#extensions#tagbar#enabled	vim/vimrc.vim	/^let g:airline#extensions#tagbar#enabled = 1$/;"	v
g:airline#extensions#virtualenv#enabled	nvim/init.vim	/^let g:airline#extensions#virtualenv#enabled = 1$/;"	v
g:airline#extensions#virtualenv#enabled	vim/vimrc.vim	/^let g:airline#extensions#virtualenv#enabled = 1$/;"	v
g:airline_left_alt_sep	nvim/init.vim	/^  let g:airline_left_alt_sep      = '»'$/;"	v
g:airline_left_alt_sep	nvim/init.vim	/^  let g:airline_left_alt_sep = ''$/;"	v
g:airline_left_alt_sep	vim/vimrc.vim	/^  let g:airline_left_alt_sep      = '»'$/;"	v
g:airline_left_alt_sep	vim/vimrc.vim	/^  let g:airline_left_alt_sep = ''$/;"	v
g:airline_left_sep	nvim/init.vim	/^  let g:airline_left_sep          = '▶'$/;"	v
g:airline_left_sep	nvim/init.vim	/^  let g:airline_left_sep = ''$/;"	v
g:airline_left_sep	vim/vimrc.vim	/^  let g:airline_left_sep          = '▶'$/;"	v
g:airline_left_sep	vim/vimrc.vim	/^  let g:airline_left_sep = ''$/;"	v
g:airline_right_alt_sep	nvim/init.vim	/^  let g:airline_right_alt_sep     = '«'$/;"	v
g:airline_right_alt_sep	nvim/init.vim	/^  let g:airline_right_alt_sep = ''$/;"	v
g:airline_right_alt_sep	vim/vimrc.vim	/^  let g:airline_right_alt_sep     = '«'$/;"	v
g:airline_right_alt_sep	vim/vimrc.vim	/^  let g:airline_right_alt_sep = ''$/;"	v
g:airline_right_sep	nvim/init.vim	/^  let g:airline_right_sep         = '◀'$/;"	v
g:airline_right_sep	nvim/init.vim	/^  let g:airline_right_sep = ''$/;"	v
g:airline_right_sep	vim/vimrc.vim	/^  let g:airline_right_sep         = '◀'$/;"	v
g:airline_right_sep	vim/vimrc.vim	/^  let g:airline_right_sep = ''$/;"	v
g:airline_skip_empty_sections	nvim/init.vim	/^let g:airline_skip_empty_sections = 1$/;"	v
g:airline_skip_empty_sections	vim/vimrc.vim	/^let g:airline_skip_empty_sections = 1$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols = {}$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.branch    = '⎇'$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.branch = ''$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.linenr    = '␊'$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.linenr = ''$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.paste     = 'Þ'$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.paste     = 'ρ'$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.paste     = '∥'$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.readonly = ''$/;"	v
g:airline_symbols	nvim/init.vim	/^  let g:airline_symbols.whitespace = 'Ξ'$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols = {}$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.branch    = '⎇'$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.branch = ''$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.linenr    = '␊'$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.linenr = ''$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.paste     = 'Þ'$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.paste     = 'ρ'$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.paste     = '∥'$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.readonly = ''$/;"	v
g:airline_symbols	vim/vimrc.vim	/^  let g:airline_symbols.whitespace = 'Ξ'$/;"	v
g:airline_theme	nvim/init.vim	/^let g:airline_theme = 'powerlineish'$/;"	v
g:airline_theme	vim/vimrc.vim	/^let g:airline_theme = 'powerlineish'$/;"	v
g:deoplete#enable_at_startup	nvim/init.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:elm_format_autosave	nvim/init.vim	/^let g:elm_format_autosave = 1$/;"	v
g:elm_format_autosave	vim/vimrc.vim	/^let g:elm_format_autosave = 1$/;"	v
g:elm_setup_keybindings	nvim/init.vim	/^let g:elm_setup_keybindings = 0$/;"	v
g:elm_setup_keybindings	vim/vimrc.vim	/^let g:elm_setup_keybindings = 0$/;"	v
g:elm_syntastic_show_warnings	nvim/init.vim	/^let g:elm_syntastic_show_warnings = 1$/;"	v
g:elm_syntastic_show_warnings	vim/vimrc.vim	/^let g:elm_syntastic_show_warnings = 1$/;"	v
g:go_fmt_command	nvim/init.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_fmt_command	vim/vimrc.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_fmt_fail_silently	nvim/init.vim	/^let g:go_fmt_fail_silently = 1$/;"	v
g:go_fmt_fail_silently	vim/vimrc.vim	/^let g:go_fmt_fail_silently = 1$/;"	v
g:go_highlight_array_whitespace_error	nvim/init.vim	/^let g:go_highlight_array_whitespace_error = 0$/;"	v
g:go_highlight_array_whitespace_error	vim/vimrc.vim	/^let g:go_highlight_array_whitespace_error = 0$/;"	v
g:go_highlight_build_constraints	nvim/init.vim	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_build_constraints	vim/vimrc.vim	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_extra_types	nvim/init.vim	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_extra_types	vim/vimrc.vim	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	nvim/init.vim	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_fields	vim/vimrc.vim	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_functions	nvim/init.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_functions	vim/vimrc.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_generate_tags	nvim/init.vim	/^let g:go_highlight_generate_tags = 1$/;"	v
g:go_highlight_generate_tags	vim/vimrc.vim	/^let g:go_highlight_generate_tags = 1$/;"	v
g:go_highlight_methods	nvim/init.vim	/^let g:go_highlight_methods = 1$/;"	v
g:go_highlight_methods	vim/vimrc.vim	/^let g:go_highlight_methods = 1$/;"	v
g:go_highlight_operators	nvim/init.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_operators	vim/vimrc.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_space_tab_error	nvim/init.vim	/^let g:go_highlight_space_tab_error = 0$/;"	v
g:go_highlight_space_tab_error	vim/vimrc.vim	/^let g:go_highlight_space_tab_error = 0$/;"	v
g:go_highlight_structs	nvim/init.vim	/^let g:go_highlight_structs = 1$/;"	v
g:go_highlight_structs	vim/vimrc.vim	/^let g:go_highlight_structs = 1$/;"	v
g:go_highlight_trailing_whitespace_error	nvim/init.vim	/^let g:go_highlight_trailing_whitespace_error = 0$/;"	v
g:go_highlight_trailing_whitespace_error	vim/vimrc.vim	/^let g:go_highlight_trailing_whitespace_error = 0$/;"	v
g:go_highlight_types	nvim/init.vim	/^let g:go_highlight_types = 1$/;"	v
g:go_highlight_types	vim/vimrc.vim	/^let g:go_highlight_types = 1$/;"	v
g:go_list_type	nvim/init.vim	/^let g:go_list_type = "quickfix"$/;"	v
g:go_list_type	vim/vimrc.vim	/^let g:go_list_type = "quickfix"$/;"	v
g:haskell_conceal_wide	nvim/init.vim	/^let g:haskell_conceal_wide = 1$/;"	v
g:haskell_conceal_wide	vim/vimrc.vim	/^let g:haskell_conceal_wide = 1$/;"	v
g:haskell_multiline_strings	nvim/init.vim	/^let g:haskell_multiline_strings = 1$/;"	v
g:haskell_multiline_strings	vim/vimrc.vim	/^let g:haskell_multiline_strings = 1$/;"	v
g:indentLine_char	nvim/init.vim	/^  let g:indentLine_char = '┆'$/;"	v
g:indentLine_char	vim/vimrc.vim	/^  let g:indentLine_char = '┆'$/;"	v
g:indentLine_concealcursor	nvim/init.vim	/^  let g:indentLine_concealcursor = 0$/;"	v
g:indentLine_concealcursor	vim/vimrc.vim	/^  let g:indentLine_concealcursor = 0$/;"	v
g:indentLine_enabled	nvim/init.vim	/^  let g:indentLine_enabled = 1$/;"	v
g:indentLine_enabled	vim/vimrc.vim	/^  let g:indentLine_enabled = 1$/;"	v
g:indentLine_faster	nvim/init.vim	/^  let g:indentLine_faster = 1$/;"	v
g:indentLine_faster	vim/vimrc.vim	/^  let g:indentLine_faster = 1$/;"	v
g:javascript_enable_domhtmlcss	nvim/init.vim	/^let g:javascript_enable_domhtmlcss = 1$/;"	v
g:javascript_enable_domhtmlcss	vim/vimrc.vim	/^let g:javascript_enable_domhtmlcss = 1$/;"	v
g:jedi#completions_command	nvim/init.vim	/^let g:jedi#completions_command = "<C-Space>"$/;"	v
g:jedi#completions_command	vim/vimrc.vim	/^let g:jedi#completions_command = "<C-Space>"$/;"	v
g:jedi#documentation_command	nvim/init.vim	/^let g:jedi#documentation_command = "K"$/;"	v
g:jedi#documentation_command	vim/vimrc.vim	/^let g:jedi#documentation_command = "K"$/;"	v
g:jedi#goto_assignments_command	nvim/init.vim	/^let g:jedi#goto_assignments_command = "<leader>g"$/;"	v
g:jedi#goto_assignments_command	vim/vimrc.vim	/^let g:jedi#goto_assignments_command = "<leader>g"$/;"	v
g:jedi#goto_definitions_command	nvim/init.vim	/^let g:jedi#goto_definitions_command = "<leader>d"$/;"	v
g:jedi#goto_definitions_command	vim/vimrc.vim	/^let g:jedi#goto_definitions_command = "<leader>d"$/;"	v
g:jedi#popup_on_dot	nvim/init.vim	/^let g:jedi#popup_on_dot = 0$/;"	v
g:jedi#popup_on_dot	vim/vimrc.vim	/^let g:jedi#popup_on_dot = 0$/;"	v
g:jedi#rename_command	nvim/init.vim	/^let g:jedi#rename_command = "<leader>r"$/;"	v
g:jedi#rename_command	vim/vimrc.vim	/^let g:jedi#rename_command = "<leader>r"$/;"	v
g:jedi#show_call_signatures	nvim/init.vim	/^let g:jedi#show_call_signatures = "0"$/;"	v
g:jedi#show_call_signatures	vim/vimrc.vim	/^let g:jedi#show_call_signatures = "0"$/;"	v
g:jedi#smart_auto_mappings	nvim/init.vim	/^let g:jedi#smart_auto_mappings = 0$/;"	v
g:jedi#smart_auto_mappings	vim/vimrc.vim	/^let g:jedi#smart_auto_mappings = 0$/;"	v
g:jedi#usages_command	nvim/init.vim	/^let g:jedi#usages_command = "<leader>n"$/;"	v
g:jedi#usages_command	vim/vimrc.vim	/^let g:jedi#usages_command = "<leader>n"$/;"	v
g:make	nvim/init.vim	/^        let g:make = 'make'$/;"	v
g:make	nvim/init.vim	/^let g:make = 'gmake'$/;"	v
g:make	vim/vimrc.vim	/^        let g:make = 'make'$/;"	v
g:make	vim/vimrc.vim	/^let g:make = 'gmake'$/;"	v
g:necoghc_enable_detailed_browse	nvim/init.vim	/^let g:necoghc_enable_detailed_browse = 1$/;"	v
g:necoghc_enable_detailed_browse	vim/vimrc.vim	/^let g:necoghc_enable_detailed_browse = 1$/;"	v
g:nerdtree_tabs_focus_on_files	nvim/init.vim	/^let g:nerdtree_tabs_focus_on_files=1$/;"	v
g:nerdtree_tabs_focus_on_files	vim/vimrc.vim	/^let g:nerdtree_tabs_focus_on_files=1$/;"	v
g:not_finish_vimplug	nvim/init.vim	/^  let g:not_finish_vimplug = "yes"$/;"	v
g:not_finish_vimplug	vim/vimrc.vim	/^  let g:not_finish_vimplug = "yes"$/;"	v
g:opamshare	vim/vimrc.vim	/^let g:opamshare = substitute(system('opam config var share'),'\\n$','','''')$/;"	v
g:polyglot_disabled	nvim/init.vim	/^let g:polyglot_disabled = ['elm']$/;"	v
g:polyglot_disabled	nvim/init.vim	/^let g:polyglot_disabled = ['python']$/;"	v
g:polyglot_disabled	vim/vimrc.vim	/^let g:polyglot_disabled = ['elm']$/;"	v
g:polyglot_disabled	vim/vimrc.vim	/^let g:polyglot_disabled = ['python']$/;"	v
g:rubycomplete_buffer_loading	nvim/init.vim	/^let g:rubycomplete_buffer_loading = 1$/;"	v
g:rubycomplete_buffer_loading	vim/vimrc.vim	/^let g:rubycomplete_buffer_loading = 1$/;"	v
g:rubycomplete_classes_in_global	nvim/init.vim	/^let g:rubycomplete_classes_in_global = 1$/;"	v
g:rubycomplete_classes_in_global	vim/vimrc.vim	/^let g:rubycomplete_classes_in_global = 1$/;"	v
g:rubycomplete_rails	nvim/init.vim	/^let g:rubycomplete_rails = 1$/;"	v
g:rubycomplete_rails	vim/vimrc.vim	/^let g:rubycomplete_rails = 1$/;"	v
g:session_autoload	nvim/init.vim	/^let g:session_autoload = "no"$/;"	v
g:session_autoload	vim/vimrc.vim	/^let g:session_autoload = "no"$/;"	v
g:session_autosave	nvim/init.vim	/^let g:session_autosave = "no"$/;"	v
g:session_autosave	vim/vimrc.vim	/^let g:session_autosave = "no"$/;"	v
g:session_command_aliases	nvim/init.vim	/^let g:session_command_aliases = 1$/;"	v
g:session_command_aliases	vim/vimrc.vim	/^let g:session_command_aliases = 1$/;"	v
g:session_directory	nvim/init.vim	/^let g:session_directory = "~\/.config\/nvim\/session"$/;"	v
g:session_directory	vim/vimrc.vim	/^let g:session_directory = "~\/.vim\/session"$/;"	v
g:syntastic_aggregate_errors	nvim/init.vim	/^let g:syntastic_aggregate_errors = 1$/;"	v
g:syntastic_aggregate_errors	vim/vimrc.vim	/^let g:syntastic_aggregate_errors = 1$/;"	v
g:syntastic_always_populate_loc_list	nvim/init.vim	/^let g:syntastic_always_populate_loc_list = 1$/;"	v
g:syntastic_always_populate_loc_list	nvim/init.vim	/^let g:syntastic_always_populate_loc_list=1$/;"	v
g:syntastic_always_populate_loc_list	vim/vimrc.vim	/^let g:syntastic_always_populate_loc_list = 1$/;"	v
g:syntastic_always_populate_loc_list	vim/vimrc.vim	/^let g:syntastic_always_populate_loc_list=1$/;"	v
g:syntastic_auto_loc_list	nvim/init.vim	/^let g:syntastic_auto_loc_list = 1$/;"	v
g:syntastic_auto_loc_list	nvim/init.vim	/^let g:syntastic_auto_loc_list=1$/;"	v
g:syntastic_auto_loc_list	vim/vimrc.vim	/^let g:syntastic_auto_loc_list = 1$/;"	v
g:syntastic_auto_loc_list	vim/vimrc.vim	/^let g:syntastic_auto_loc_list=1$/;"	v
g:syntastic_error_symbol	nvim/init.vim	/^let g:syntastic_error_symbol='✗'$/;"	v
g:syntastic_error_symbol	vim/vimrc.vim	/^let g:syntastic_error_symbol='✗'$/;"	v
g:syntastic_go_checkers	nvim/init.vim	/^let g:syntastic_go_checkers = ['golint', 'govet']$/;"	v
g:syntastic_go_checkers	vim/vimrc.vim	/^let g:syntastic_go_checkers = ['golint', 'govet']$/;"	v
g:syntastic_mode_map	nvim/init.vim	/^let g:syntastic_mode_map = { 'mode': 'active', 'passive_filetypes': ['go'] }$/;"	v
g:syntastic_mode_map	vim/vimrc.vim	/^let g:syntastic_mode_map = { 'mode': 'active', 'passive_filetypes': ['go'] }$/;"	v
g:syntastic_ocaml_checkers	nvim/init.vim	/^let g:syntastic_ocaml_checkers = ['merlin']$/;"	v
g:syntastic_ocaml_checkers	vim/vimrc.vim	/^let g:syntastic_ocaml_checkers = ['merlin']$/;"	v
g:syntastic_python_checkers	nvim/init.vim	/^let g:syntastic_python_checkers=['python', 'flake8']$/;"	v
g:syntastic_python_checkers	vim/vimrc.vim	/^let g:syntastic_python_checkers=['python', 'flake8']$/;"	v
g:syntastic_style_error_symbol	nvim/init.vim	/^let g:syntastic_style_error_symbol = '✗'$/;"	v
g:syntastic_style_error_symbol	vim/vimrc.vim	/^let g:syntastic_style_error_symbol = '✗'$/;"	v
g:syntastic_style_warning_symbol	nvim/init.vim	/^let g:syntastic_style_warning_symbol = '⚠'$/;"	v
g:syntastic_style_warning_symbol	vim/vimrc.vim	/^let g:syntastic_style_warning_symbol = '⚠'$/;"	v
g:syntastic_warning_symbol	nvim/init.vim	/^let g:syntastic_warning_symbol='⚠'$/;"	v
g:syntastic_warning_symbol	vim/vimrc.vim	/^let g:syntastic_warning_symbol='⚠'$/;"	v
g:tagbar_autofocus	nvim/init.vim	/^let g:tagbar_autofocus = 1$/;"	v
g:tagbar_autofocus	vim/vimrc.vim	/^let g:tagbar_autofocus = 1$/;"	v
g:tagbar_type_ruby	nvim/init.vim	/^let g:tagbar_type_ruby = {$/;"	v
g:tagbar_type_ruby	vim/vimrc.vim	/^let g:tagbar_type_ruby = {$/;"	v
g:vim_bootstrap_editor	nvim/init.vim	/^let g:vim_bootstrap_editor = "nvim"				" nvim or vim$/;"	v
g:vim_bootstrap_editor	vim/vimrc.vim	/^let g:vim_bootstrap_editor = "vim"        " nvim or vim$/;"	v
g:vim_bootstrap_langs	nvim/init.vim	/^let g:vim_bootstrap_langs = "c,elixir,elm,erlang,go,haskell,html,javascript,lisp,lua,ocaml,perl,php,python,ruby,rust,scala"$/;"	v
g:vim_bootstrap_langs	vim/vimrc.vim	/^let g:vim_bootstrap_langs = "c,elixir,elm,erlang,go,haskell,html,javascript,lisp,lua,ocaml,perl,php,python,ruby,rust,scala"$/;"	v
g:vimshell_prompt	nvim/init.vim	/^let g:vimshell_prompt =  '$ '$/;"	v
g:vimshell_prompt	vim/vimrc.vim	/^let g:vimshell_prompt =  '$ '$/;"	v
g:vimshell_user_prompt	nvim/init.vim	/^let g:vimshell_user_prompt = 'fnamemodify(getcwd(), ":~")'$/;"	v
g:vimshell_user_prompt	vim/vimrc.vim	/^let g:vimshell_user_prompt = 'fnamemodify(getcwd(), ":~")'$/;"	v
gdv	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^gdv() { git diff -w "$@" | view - }$/;"	f
gems	zsh/plugins/oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^    function gems {$/;"	f
gems	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function gems {$/;"	f
gemsets	zsh/plugins/oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function gemsets() { echo 'not supported' }$/;"	f
gemy	zsh/plugins/oh-my-zsh/plugins/gem/gem.plugin.zsh	/^function gemy {$/;"	f
get_tagname_or_hash	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^def get_tagname_or_hash():$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/bin/docbookPrep.sh	/^get_url()$/;"	f
get_url	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/bin/docbookPrep.sh	/^get_url()$/;"	f
geteip	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^geteip() {$/;"	f
getip	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^getip() {$/;"	f
gfg	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^function gfg() { git ls-files | grep $@ }$/;"	f
ggf	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^ggf() {$/;"	f
ggl	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^ggl() {$/;"	f
ggp	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^ggp() {$/;"	f
ggpnp	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^ggpnp() {$/;"	f
ggu	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^ggu() {$/;"	f
gi	zsh/plugins/oh-my-zsh/plugins/gitignore/gitignore.plugin.zsh	/^function gi() { curl -sL https:\/\/www.gitignore.io\/api\/${(j:,:)@} }$/;"	f
git_commits_ahead	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_commits_ahead() {$/;"	f
git_commits_behind	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_commits_behind() {$/;"	f
git_compare_version	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_compare_version() {$/;"	f
git_current_branch	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_current_branch() {$/;"	f
git_current_user_email	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_current_user_email() {$/;"	f
git_current_user_name	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_current_user_name() {$/;"	f
git_prepare	zsh/keybindings.sh	/^	function git_prepare() {$/;"	f
git_prompt_ahead	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_prompt_ahead() {$/;"	f
git_prompt_behind	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_prompt_behind() {$/;"	f
git_prompt_info	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_prompt_info() {$/;"	f
git_prompt_info	zsh/plugins/oh-my-zsh/plugins/gitfast/gitfast.plugin.zsh	/^function git_prompt_info() {$/;"	f
git_prompt_long_sha	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_prompt_long_sha() {$/;"	f
git_prompt_remote	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_prompt_remote() {$/;"	f
git_prompt_short_sha	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_prompt_short_sha() {$/;"	f
git_prompt_status	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_prompt_status() {$/;"	f
git_remote_status	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function git_remote_status() {$/;"	f
git_super_status	zsh/plugins/oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^git_super_status() {$/;"	f
globalias	zsh/plugins/oh-my-zsh/plugins/globalias/globalias.plugin.zsh	/^globalias() {$/;"	f
go	nvim/init.vim	/^augroup go$/;"	a
go	vim/vimrc.vim	/^augroup go$/;"	a
goto_home	zsh/keybindings.sh	/^	function goto_home() {$/;"	f
handle_completion_insecurities	zsh/plugins/oh-my-zsh/lib/compfix.zsh	/^function handle_completion_insecurities() {$/;"	f
hash	zsh/plugins/oh-my-zsh/plugins/gnu-utils/gnu-utils.plugin.zsh	/^  function hash() {$/;"	f
header	zsh/plugins/zsh-autosuggestions/script/test_runner.zsh	/^header() {$/;"	f
help	zsh/plugins/oh-my-zsh/plugins/catimg/catimg.sh	/^function help() {$/;"	f
hg_dirty	zsh/plugins/oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_dirty {$/;"	f
hg_dirty_choose	zsh/plugins/oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_dirty_choose {$/;"	f
hg_get_branch_name	zsh/plugins/oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_get_branch_name() {$/;"	f
hg_prompt_info	zsh/plugins/oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_prompt_info {$/;"	f
hgic	zsh/plugins/oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hgic() {$/;"	f
hgoc	zsh/plugins/oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hgoc() {$/;"	f
hs	zsh/plugins/oh-my-zsh/plugins/history/history.plugin.zsh	/^function hs$/;"	f
http20	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^http20() {$/;"	f
httpstatus	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^httpstatus() {$/;"	f
in_hg	zsh/plugins/oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function in_hg() {$/;"	f
in_svn	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^in_svn() {$/;"	f
insert_favlist	zsh/plugins/oh-my-zsh/tools/theme_chooser.sh	/^function insert_favlist() {$/;"	f
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-02-19<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-16<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#shelldoc">3. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-@group">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">3. suites<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>3.1. <a href="#shelldoc-function-@group">asserts<\/a><\/dt><dt>3.2. <a href="#shelldoc-function-@group">failures<\/a><\/dt><dt>3.3. <a href="#shelldoc-function-@group">suites<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span><strong class="command">sh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span><strong class="command">bash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span><strong class="command">dash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span><strong class="command">ksh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span><strong class="command">pdksh<\/strong><\/span>)<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to <span><strong class="command">shunit2<\/strong><\/span> can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span><strong class="command">shunit<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-02-21<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#shelldoc">3. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-@group">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">3. suites<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>3.1. <a href="#shelldoc-function-@group">asserts<\/a><\/dt><dt>3.2. <a href="#shelldoc-function-@group">failures<\/a><\/dt><dt>3.3. <a href="#shelldoc-function-@group">suites<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span><strong class="command">sh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span><strong class="command">bash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span><strong class="command">dash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span><strong class="command">ksh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span><strong class="command">pdksh<\/strong><\/span>)<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to <span><strong class="command">shunit2<\/strong><\/span> can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span><strong class="command">shunit<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-04-22<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.0.2<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#shelldoc">3. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">3. suites<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>3.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>3.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>3.3. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span><strong class="command">sh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span><strong class="command">bash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span><strong class="command">dash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span><strong class="command">ksh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span><strong class="command">pdksh<\/strong><\/span>)<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to <span><strong class="command">shunit2<\/strong><\/span> can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span><strong class="command">shunit<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-07-12<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.0.3<\/td><td align="left">2007-07-12<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.2<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#shelldoc">3. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">3. suites<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>3.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>3.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>3.3. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span><strong class="command">sh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span><strong class="command">bash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span><strong class="command">dash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span><strong class="command">ksh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span><strong class="command">pdksh<\/strong><\/span>)<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to shUnit2 can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span><strong class="command">shunit2<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-04-22<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.1.0<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#advanced_usage">3. Advanced Usage<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#shelldoc">4. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>4.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>4.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>4.3. <a href="#shelldoc-function-skipping">skipping<\/a><\/dt><dt>4.4. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="list-of-examples"><p><b>List of Examples<\/b><\/p><dl><dt>3.1. <a href="#ex:math_include"><code class="filename">math.inc<\/code> -- math include<\/a><\/dt><dt>3.2. <a href="#ex:math_test"><code class="filename">math_test<\/code> -- math unit test<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span><strong class="command">sh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span><strong class="command">bash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span><strong class="command">dash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span><strong class="command">ksh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span><strong class="command">pdksh<\/strong><\/span>)<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to <span><strong class="command">shunit2<\/strong><\/span> can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span><strong class="command">shunit<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-07-13<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.1.0<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#advanced_usage">3. Advanced Usage<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#shelldoc">4. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>4.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>4.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>4.3. <a href="#shelldoc-function-skipping">skipping<\/a><\/dt><dt>4.4. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="list-of-examples"><p><b>List of Examples<\/b><\/p><dl><dt>3.1. <a href="#ex:math_include"><code class="filename">math.inc<\/code> -- math include<\/a><\/dt><dt>3.2. <a href="#ex:math_test"><code class="filename">math_test<\/code> -- math unit test<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span><strong class="command">sh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span><strong class="command">bash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span><strong class="command">dash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span><strong class="command">ksh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span><strong class="command">pdksh<\/strong><\/span>)<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to shUnit2 can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span><strong class="command">shunit2<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-12-31<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.1.2<\/td><td align="left">2007-12-31<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.1.1<\/td><td align="left">2007-07-13<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.1.0<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a class="ulink" href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a class="ulink" href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a class="ulink" href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#advanced_usage">3. Advanced Usage<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#shelldoc">4. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#appendix">5. Appendix<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shell_errata">1. Shell Errata<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#zsh">1.1. ZSH<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>4.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>4.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>4.3. <a href="#shelldoc-function-skipping">skipping<\/a><\/dt><dt>4.4. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="list-of-examples"><p><b>List of Examples<\/b><\/p><dl><dt>3.1. <a href="#ex:math_include"><code class="filename">math.inc<\/code> -- math include<\/a><\/dt><dt>3.2. <a href="#ex:math_test"><code class="filename">math_test<\/code> -- math unit test<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a class="ulink" href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a class="ulink" href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a class="ulink" href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a class="ulink" href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a class="ulink" href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a class="ulink" href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a class="ulink" href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a class="ulink" href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span class="command"><strong>sh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span class="command"><strong>bash<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span class="command"><strong>dash<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span class="command"><strong>ksh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span class="command"><strong>pdksh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.zsh.org\/" target="_top">zsh<\/a> - ZSH (<span class="command"><strong>zsh<\/strong><\/span>) (since 2.1.2) — please see the <a class="link" href="#zsh" title="1.1. ZSH">ZSH<\/a> shell erratta for more information.<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to shUnit2 can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a class="email" href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span class="command"><strong>shunit2<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2008-05-10<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.1.2<\/td><td align="left">2007-12-31<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.1.1<\/td><td align="left">2007-07-13<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.1.0<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a class="ulink" href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a class="ulink" href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a class="ulink" href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#advanced_usage">3. Advanced Usage<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#shelldoc">4. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#appendix">5. Appendix<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shell_errata">1. Shell Errata<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#zsh">1.1. ZSH<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>4.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>4.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>4.3. <a href="#shelldoc-function-skipping">skipping<\/a><\/dt><dt>4.4. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="list-of-examples"><p><b>List of Examples<\/b><\/p><dl><dt>3.1. <a href="#ex:math_include"><code class="filename">math.inc<\/code> -- math include<\/a><\/dt><dt>3.2. <a href="#ex:math_test"><code class="filename">math_test<\/code> -- math unit test<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a class="ulink" href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a class="ulink" href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a class="ulink" href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a class="ulink" href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a class="ulink" href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a class="ulink" href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a class="ulink" href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a class="ulink" href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span class="command"><strong>sh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span class="command"><strong>bash<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span class="command"><strong>dash<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span class="command"><strong>ksh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span class="command"><strong>pdksh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.zsh.org\/" target="_top">zsh<\/a> - ZSH (<span class="command"><strong>zsh<\/strong><\/span>) (since 2.1.2) — please see the <a class="link" href="#zsh" title="1.1. ZSH">ZSH<\/a> shell erratta for more information.<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to shUnit2 can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a class="email" href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span class="command"><strong>shunit2<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
introduction	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2008-07-11<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.1.4<\/td><td align="left">2008-07-11<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.1.2<\/td><td align="left">2007-12-31<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.1.1<\/td><td align="left">2007-07-13<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.1.0<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a class="ulink" href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a class="ulink" href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a class="ulink" href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#advanced_usage">3. Advanced Usage<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#test_skipping">1. Test Skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#line_numbers">2. Including Line Numbers in Asserts<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#shelldoc">4. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#appendix">5. Appendix<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shell_errata">1. Shell Errata<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#zsh">1.1. ZSH<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>4.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>4.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>4.3. <a href="#shelldoc-function-skipping">skipping<\/a><\/dt><dt>4.4. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="list-of-examples"><p><b>List of Examples<\/b><\/p><dl><dt>3.1. <a href="#ex:math_include"><code class="filename">math.inc<\/code> -- math include<\/a><\/dt><dt>3.2. <a href="#ex:math_test"><code class="filename">math_test<\/code> -- math unit test<\/a><\/dt><dt>3.3. <a href="#ex:line_numbers">Asserts without and with line numbers<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a class="ulink" href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a class="ulink" href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a class="ulink" href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a class="ulink" href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a class="ulink" href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a class="ulink" href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a class="ulink" href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a class="ulink" href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span class="command"><strong>sh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span class="command"><strong>bash<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span class="command"><strong>dash<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span class="command"><strong>ksh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span class="command"><strong>pdksh<\/strong><\/span>)<\/p><\/li><li><p><a class="ulink" href="http:\/\/www.zsh.org\/" target="_top">zsh<\/a> - ZSH (<span class="command"><strong>zsh<\/strong><\/span>) (since 2.1.2) — please see the <a class="link" href="#zsh" title="1.1. ZSH">ZSH<\/a> shell erratta for more information.<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to shUnit2 can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a class="email" href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span class="command"><strong>shunit2<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
isSkipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^isSkipping()$/;"	f
is_plugin	zsh/plugins/oh-my-zsh/oh-my-zsh.sh	/^is_plugin() {$/;"	f
itunes	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function itunes() {$/;"	f
iwhois	zsh/plugins/oh-my-zsh/plugins/iwhois/iwhois.plugin.zsh	/^function iwhois() {$/;"	f
jira	zsh/plugins/oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function jira() {$/;"	f
jump	zsh/plugins/oh-my-zsh/plugins/jump/jump.plugin.zsh	/^jump() {$/;"	f
kapow	zsh/plugins/oh-my-zsh/plugins/pow/pow.plugin.zsh	/^kapow(){$/;"	f
kerndeb	zsh/plugins/oh-my-zsh/plugins/debian/debian.plugin.zsh	/^kerndeb () {$/;"	f
kerndeb	zsh/plugins/oh-my-zsh/plugins/ubuntu/ubuntu.plugin.zsh	/^kerndeb () {$/;"	f
killit	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^killit() {$/;"	f
knife_ssh	zsh/plugins/oh-my-zsh/plugins/knife_ssh/knife_ssh.plugin.zsh	/^function knife_ssh() {$/;"	f
kt	zsh/plugins/oh-my-zsh/plugins/kate/kate.plugin.zsh	/^function kt () {$/;"	f
line_numbers	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^    <\/pre><p>As you can see, the total number of tests has not changed, but the report indicates that some tests were skipped.<\/p><p>Skipping can be controlled with the following functions: <code class="function">startSkipping()<\/code>, <code class="function">stopSkipping()<\/code>, and <code class="function">isSkipping<\/code>. Once skipping is enabled, it will remain enabled until the end of the current test function call, after which skipping is disabled.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="line_numbers"><\/a>2. Including Line Numbers in Asserts<\/h2><\/div><\/div><\/div><p>If you include lots of assert statements in an individual test function, it can become difficult to determine exactly which assert was thrown unless your messages are unique. To help somewhat, line numbers can be included in the assert messages. To enable this, a special shell "macro" must be used rather than the standard assert calls.<\/p><p>For example, to include line numbers for a <code class="function">assertEquals()<\/code> function call, replace the '<code class="function">assertEquals()<\/code>' with '<code class="function">${_ASSERT_EQUALS_}<\/code>'.<\/p><div class="example"><a name="ex:line_numbers"><\/a><p class="title"><b>Example 3.3. Asserts without and with line numbers<\/b><\/p><div class="example-contents"><pre class="programlisting">$/;"	a
listMavenCompletions	zsh/plugins/oh-my-zsh/plugins/mvn/mvn.plugin.zsh	/^function listMavenCompletions { $/;"	f
list_themes	zsh/plugins/oh-my-zsh/tools/theme_chooser.sh	/^function list_themes() {$/;"	f
ls	zsh/plugins/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^ls() {$/;"	f
lstheme	zsh/plugins/oh-my-zsh/plugins/themes/themes.plugin.zsh	/^function lstheme$/;"	f
lwd	zsh/plugins/oh-my-zsh/plugins/last-working-dir/last-working-dir.plugin.zsh	/^lwd() {$/;"	f
magnet_to_torrent	zsh/plugins/oh-my-zsh/plugins/torrent/torrent.plugin.zsh	/^function magnet_to_torrent() {$/;"	f
main	zsh/plugins/oh-my-zsh/tools/install.sh	/^main() {$/;"	f
main	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_standalone.sh	/^main()$/;"	f
making-a-release	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h1><a id="making-a-release" name="making-a-release">Making a release<\/a><\/h1>$/;"	a
man	zsh/plugins/oh-my-zsh/plugins/bwana/bwana.plugin.zsh	/^  function man() {$/;"	f
man	zsh/plugins/oh-my-zsh/plugins/colored-man-pages/colored-man-pages.plugin.zsh	/^man() {$/;"	f
man	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function man-preview() {$/;"	f
mapleader	nvim/init.vim	/^let mapleader=','$/;"	v
mapleader	vim/vimrc.vim	/^let mapleader=','$/;"	v
mark	zsh/plugins/oh-my-zsh/plugins/jump/jump.plugin.zsh	/^mark() {$/;"	f
marked	zsh/plugins/oh-my-zsh/plugins/marked2/marked2.plugin.zsh	/^function marked() {$/;"	f
marks	zsh/plugins/oh-my-zsh/plugins/jump/jump.plugin.zsh	/^marks() {$/;"	f
md5sum-the-tarball-and-sign-with-gpg	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="md5sum-the-tarball-and-sign-with-gpg" name="md5sum-the-tarball-and-sign-with-gpg">md5sum the Tarball and Sign With gpg<\/a><\/h2>$/;"	a
n	nvim/init.vim	/^nnoremap n nzzzv$/;"	m
n	vim/vimrc.vim	/^nnoremap n nzzzv$/;"	m
new_gh	zsh/plugins/oh-my-zsh/plugins/github/github.plugin.zsh	/^new_gh() { # [DIRECTORY]$/;"	f
newpl	zsh/plugins/oh-my-zsh/plugins/perl/perl.plugin.zsh	/^newpl () {$/;"	f
no_buffers_menu	nvim/init.vim	/^let no_buffers_menu=1$/;"	v
no_buffers_menu	vim/vimrc.vim	/^let no_buffers_menu=1$/;"	v
node	zsh/plugins/oh-my-zsh/plugins/node/node.plugin.zsh	/^function node-docs {$/;"	f
noyes	zsh/plugins/oh-my-zsh/tools/theme_chooser.sh	/^function noyes() {$/;"	f
nvm_prompt_info	zsh/plugins/oh-my-zsh/lib/nvm.zsh	/^function nvm_prompt_info() {$/;"	f
ok?	zsh/plugins/oh-my-zsh/plugins/cloudapp/cloudapp.rb	/^  def ok? ; true end$/;"	f	class:HTTParty
omz_diagnostic_dump	zsh/plugins/oh-my-zsh/lib/diagnostics.zsh	/^function omz_diagnostic_dump() {$/;"	f
omz_termsupport_precmd	zsh/plugins/oh-my-zsh/lib/termsupport.zsh	/^function omz_termsupport_precmd {$/;"	f
omz_termsupport_preexec	zsh/plugins/oh-my-zsh/lib/termsupport.zsh	/^function omz_termsupport_preexec {$/;"	f
omz_urldecode	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function omz_urldecode {$/;"	f
omz_urlencode	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function omz_urlencode() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/bind_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/highlight_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/strategies/default_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/strategies/match_prev_cmd_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/suggestion_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/widgets/clear_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/widgets/execute_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/widgets/modify_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/test/widgets/partial_accept_test.zsh	/^oneTimeSetUp() {$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/examples/mkdir_test.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_failures.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_macros.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/math_test.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/mkdir_test.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_failures.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_misc.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/math_test.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/mkdir_test.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_failures.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^oneTimeSetUp()$/;"	f
open_command	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function open_command() {$/;"	f
open_lighthouse_ticket	zsh/plugins/oh-my-zsh/plugins/lighthouse/lighthouse.plugin.zsh	/^open_lighthouse_ticket () {$/;"	f
out	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^out = ' '.join([$/;"	v
output	zsh/plugins/oh-my-zsh/plugins/z/z.sh	/^            function output(files, out, common) {$/;"	f
pacdisowned	zsh/plugins/oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^pacdisowned() {$/;"	f
paclist	zsh/plugins/oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^paclist() {$/;"	f
pacmanallkeys	zsh/plugins/oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^pacmanallkeys() {$/;"	f
pacmansignkeys	zsh/plugins/oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^pacmansignkeys() {$/;"	f
parse_git_dirty	zsh/plugins/oh-my-zsh/lib/git.zsh	/^function parse_git_dirty() {$/;"	f
per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function per-directory-history-toggle-history() {$/;"	f
per	zsh/plugins/oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function per-directory-history-toggle-history() {$/;"	f
pfd	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function pfd() {$/;"	f
pfs	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function pfs() {$/;"	f
pgs	zsh/plugins/oh-my-zsh/plugins/perl/perl.plugin.zsh	/^pgs() { # [find] [replace] [filename]$/;"	f
pj	zsh/plugins/oh-my-zsh/plugins/pj/pj.plugin.zsh	/^pj () {$/;"	f
plugged_in	zsh/plugins/oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function plugged_in() {$/;"	f
po	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^po = Popen(['git', 'status', '--porcelain', '--branch'], stdout=PIPE, stderr=PIPE)$/;"	v
pop_future	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function pop_future() {$/;"	f
pop_past	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function pop_past() {$/;"	f
port_pro	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^port_pro() {$/;"	f
post-to-sourceforge-and-freshmeat	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="post-to-sourceforge-and-freshmeat" name="post-to-sourceforge-and-freshmeat">Post to SourceForge and Freshmeat<\/a><\/h2>$/;"	a
powed	zsh/plugins/oh-my-zsh/plugins/pow/pow.plugin.zsh	/^powed(){$/;"	f
powit	zsh/plugins/oh-my-zsh/plugins/pow/pow.plugin.zsh	/^powit(){$/;"	f
precmd	zsh/plugins/oh-my-zsh/plugins/screen/screen.plugin.zsh	/^  function precmd()$/;"	f
precmd	zsh/prompt.sh	/^precmd () {$/;"	f
precmd_update_git_vars	zsh/plugins/oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function precmd_update_git_vars() {$/;"	f
preexec	zsh/plugins/oh-my-zsh/plugins/screen/screen.plugin.zsh	/^  function preexec()$/;"	f
preexec	zsh/prompt.sh	/^preexec () {$/;"	f
preexec_update_git_vars	zsh/plugins/oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function preexec_update_git_vars() {$/;"	f
prep	zsh/plugins/oh-my-zsh/plugins/perl/perl.plugin.zsh	/^prep() { # [pattern] [filename unless STDOUT]$/;"	f
process_emoji_data_file	zsh/plugins/oh-my-zsh/plugins/emoji/update_emoji.pl	/^sub process_emoji_data_file {$/;"	s
psgrep	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^psgrep() {$/;"	f
push_future	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function push_future() {$/;"	f
push_past	zsh/plugins/oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function push_past() {$/;"	f
pushdf	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function pushdf() {$/;"	f
pyclean	zsh/plugins/oh-my-zsh/plugins/python/python.plugin.zsh	/^function pyclean() {$/;"	f
pyenv_prompt_info	zsh/plugins/oh-my-zsh/plugins/pyenv/pyenv.plugin.zsh	/^        function pyenv_prompt_info() {$/;"	f
pyenv_prompt_info	zsh/plugins/oh-my-zsh/plugins/pyenv/pyenv.plugin.zsh	/^    function pyenv_prompt_info() { echo "system: $(python -V 2>&1 | cut -f 2 -d ' ')" }$/;"	f
python_highlight_all	nvim/init.vim	/^let python_highlight_all = 1$/;"	v
python_highlight_all	vim/vimrc.vim	/^let python_highlight_all = 1$/;"	v
quick	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function quick-look() {$/;"	f
quote	zsh/plugins/oh-my-zsh/plugins/rand-quote/rand-quote.plugin.zsh	/^    function quote()$/;"	f
rack_root	zsh/plugins/oh-my-zsh/plugins/pow/pow.plugin.zsh	/^rack_root(){$/;"	f
rack_root_detect	zsh/plugins/oh-my-zsh/plugins/pow/pow.plugin.zsh	/^rack_root_detect(){$/;"	f
rake_refresh	zsh/plugins/oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^rake_refresh () {$/;"	f
random_emoji	zsh/plugins/oh-my-zsh/plugins/emoji/emoji.plugin.zsh	/^function random_emoji() {$/;"	f
rb18	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function rb18 {$/;"	f
rb19	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function rb19 {$/;"	f
rb20	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function rb20 {$/;"	f
rb21	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function rb21 {$/;"	f
rbenv_prompt_info	zsh/plugins/oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^    function rbenv_prompt_info() {$/;"	f
rbenv_prompt_info	zsh/plugins/oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function rbenv_prompt_info() { echo "system: $(ruby -v | cut -f-2 -d ' ')" }$/;"	f
rbfu	zsh/plugins/oh-my-zsh/plugins/rbfu/rbfu.plugin.zsh	/^  function rbfu-rubies() {$/;"	f
rehash	zsh/plugins/oh-my-zsh/plugins/gnu-utils/gnu-utils.plugin.zsh	/^  function rehash() {$/;"	f
related-documentation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h1><a id="related-documentation" name="related-documentation">Related Documentation<\/a><\/h1>$/;"	a
remote_console	zsh/plugins/oh-my-zsh/plugins/rails/rails.plugin.zsh	/^function remote_console() {$/;"	f
reportVersion	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/bin/version_info.sh	/^reportVersion()$/;"	f
reportVersion	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/bin/version_info.sh	/^reportVersion()$/;"	f
repow	zsh/plugins/oh-my-zsh/plugins/pow/pow.plugin.zsh	/^repow(){$/;"	f
req20	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^req20() {$/;"	f
require_tool	zsh/plugins/oh-my-zsh/tools/require_tool.sh	/^require_tool ()$/;"	f
restore	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^restore() {$/;"	f
retlog	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function retlog() {$/;"	f
retval	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function retval() {$/;"	f
ruby_prompt_info	zsh/plugins/oh-my-zsh/lib/prompt_info_functions.zsh	/^function ruby_prompt_info() {$/;"	f
run_test	zsh/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test() {$/;"	f
run_test	zsh/plugins/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test() {$/;"	f
run_test_internal	zsh/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test_internal() {$/;"	f
run_test_internal	zsh/plugins/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test_internal() {$/;"	f
run_tests	zsh/plugins/zsh-autosuggestions/test/test_helper.zsh	/^run_tests() {$/;"	f
rvm	zsh/plugins/oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function rvm-update {$/;"	f
rvm_prompt_info	zsh/plugins/oh-my-zsh/lib/prompt_info_functions.zsh	/^function rvm_prompt_info() {$/;"	f
scd_chpwd_hook	zsh/plugins/oh-my-zsh/plugins/scd/scd.plugin.zsh	/^    scd_chpwd_hook() { scd --add $PWD }$/;"	f
screen_set	zsh/plugins/oh-my-zsh/plugins/screen/screen.plugin.zsh	/^  function screen_set()$/;"	f
searchAndPlay	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^          searchAndPlay() {$/;"	f
setUp	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^setUp() {$/;"	f
setUp	zsh/plugins/zsh-autosuggestions/test/widgets/clear_test.zsh	/^setUp() {$/;"	f
setUp	zsh/plugins/zsh-autosuggestions/test/widgets/modify_test.zsh	/^setUp() {$/;"	f
setUp	zsh/plugins/zsh-autosuggestions/test/widgets/partial_accept_test.zsh	/^setUp() {$/;"	f
setUp	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^setUp()$/;"	f
set_history	zsh/plugins/zsh-autosuggestions/test/test_helper.zsh	/^set_history() {$/;"	f
set_prompt	zsh/prompt.sh	/^set_prompt() {$/;"	f
setupWrapping	nvim/init.vim	/^  function s:setupWrapping()$/;"	f
setupWrapping	vim/vimrc.vim	/^  function s:setupWrapping()$/;"	f
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.0"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit version 2.0.0<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.71.0"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit version 2.0.1<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.72.0"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit version 2.0.2<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.72.0"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit2 version 2.0.3<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.72.0"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit version 2.1.0<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.72.0"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit2 version 2.1.0<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.73.2"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit2 version 2.1.2<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.73.2"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit2 version 2.1.2<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shUnit2	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.73.2"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit2 version 2.1.4<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shellBash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/bin/version_info.sh	/^shellBash()$/;"	f
shellBash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/bin/version_info.sh	/^shellBash()$/;"	f
shellDash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/bin/version_info.sh	/^shellDash()$/;"	f
shellDash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/bin/version_info.sh	/^shellDash()$/;"	f
shellKsh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/bin/version_info.sh	/^shellKsh()$/;"	f
shellKsh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/bin/version_info.sh	/^shellKsh()$/;"	f
shellPdksh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/bin/version_info.sh	/^shellPdksh()$/;"	f
shellPdksh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/bin/version_info.sh	/^shellPdksh()$/;"	f
shellZsh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/bin/version_info.sh	/^shellZsh()$/;"	f
shellZsh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/bin/version_info.sh	/^shellZsh()$/;"	f
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with <span><strong class="command">shunit<\/strong><\/span>.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 3. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-@group">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">3. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-@group"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-@group"><\/a><p class="title"><b>Table 3.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with <span><strong class="command">shunit<\/strong><\/span>.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 3. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-@group">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-@group">3. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-@group"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-@group"><\/a><p class="title"><b>Table 3.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with <span><strong class="command">shunit<\/strong><\/span>.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 3. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">3. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 3.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with shUnit2.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 3. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">3. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 3.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^    <\/pre><p>As you can see, the total number of tests has not changed, but the report indicates that some tests were skipped.<\/p><p>Skipping can be controlled with the following functions: <code class="function">startSkipping()<\/code>, <code class="function">stopSkipping()<\/code>, and <code class="function">isSkipping<\/code>. Once skipping is enabled, it will remain enabled until the end of the current test function call, after which skipping is disabled.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 4. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 4.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^    <\/pre><p>As you can see, the total number of tests has not changed, but the report indicates that some tests were skipped.<\/p><p>Skipping can be controlled with the following functions: <code class="function">startSkipping()<\/code>, <code class="function">stopSkipping()<\/code>, and <code class="function">isSkipping<\/code>. Once skipping is enabled, it will remain enabled until the end of the current test function call, after which skipping is disabled.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 4. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 4.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^    <\/pre><p>As you can see, the total number of tests has not changed, but the report indicates that some tests were skipped.<\/p><p>Skipping can be controlled with the following functions: <code class="function">startSkipping()<\/code>, <code class="function">stopSkipping()<\/code>, and <code class="function">isSkipping<\/code>. Once skipping is enabled, it will remain enabled until the end of the current test function call, after which skipping is disabled.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 4. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 4.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^    <\/pre><p>As you can see, the total number of tests has not changed, but the report indicates that some tests were skipped.<\/p><p>Skipping can be controlled with the following functions: <code class="function">startSkipping()<\/code>, <code class="function">stopSkipping()<\/code>, and <code class="function">isSkipping<\/code>. Once skipping is enabled, it will remain enabled until the end of the current test function call, after which skipping is disabled.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 4. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 4.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^      <\/pre><\/div><\/div><br class="example-break"><p>Note: line numbers are not supported in all shells. If a shell does not support them, no errors will be thrown. Supported shells include: <span class="command"><strong>bash<\/strong><\/span> (&gt;=3.0), <span class="command"><strong>ksh<\/strong><\/span>, <span class="command"><strong>pdksh<\/strong><\/span>, and <span class="command"><strong>zsh<\/strong><\/span>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 4. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-skipping">3. skipping<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">4. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 4.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-@group	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-@group"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-@group"><\/a><p class="title"><b>Table 3.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-@group	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.0/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-@group"><\/a>3. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-@group"><\/a><p class="title"><b>Table 3.3. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-@group	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-@group"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-@group"><\/a><p class="title"><b>Table 3.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-@group	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.1/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-@group"><\/a>3. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-@group"><\/a><p class="title"><b>Table 3.3. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 3.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 3.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 4.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 4.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 4.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 4.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 4.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-skipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-skipping"><\/a>3. skipping<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-skipping"><\/a><p class="title"><b>Table 4.3. skipping<\/b><\/p><div class="table-contents"><table summary="skipping" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-skipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-skipping"><\/a>3. skipping<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-skipping"><\/a><p class="title"><b>Table 4.3. skipping<\/b><\/p><div class="table-contents"><table summary="skipping" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-skipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-skipping"><\/a>3. skipping<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-skipping"><\/a><p class="title"><b>Table 4.3. skipping<\/b><\/p><div class="table-contents"><table summary="skipping" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-skipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-skipping"><\/a>3. skipping<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-skipping"><\/a><p class="title"><b>Table 4.3. skipping<\/b><\/p><div class="table-contents"><table summary="skipping" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-skipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-skipping"><\/a>3. skipping<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-skipping"><\/a><p class="title"><b>Table 4.3. skipping<\/b><\/p><div class="table-contents"><table summary="skipping" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.2/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>3. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 3.3. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>3. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 3.3. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.0/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>4. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 4.4. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>4. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 4.4. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>4. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 4.4. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>4. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 4.4. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>4. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 4.4. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
showHelp	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^  showHelp () {$/;"	f
showStatus	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^  showStatus () {$/;"	f
shrink_path	zsh/plugins/oh-my-zsh/plugins/shrink-path/shrink-path.plugin.zsh	/^shrink_path () {$/;"	f
simulator	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function simulator {$/;"	f
sortconip	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^sortconip() {$/;"	f
sortcons	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^sortcons() {$/;"	f
source_autosuggestions	zsh/plugins/zsh-autosuggestions/test/test_helper.zsh	/^source_autosuggestions() {$/;"	f
source_env	zsh/plugins/oh-my-zsh/plugins/dotenv/dotenv.plugin.zsh	/^source_env() {$/;"	f
sourceforge	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h1><a id="sourceforge" name="sourceforge">SourceForge<\/a><\/h1>$/;"	a
spectrum_bls	zsh/plugins/oh-my-zsh/lib/spectrum.zsh	/^function spectrum_bls() {$/;"	f
spectrum_ls	zsh/plugins/oh-my-zsh/lib/spectrum.zsh	/^function spectrum_ls() {$/;"	f
split_tab	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function split_tab() {$/;"	f
spotify	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function spotify() {$/;"	f
sprunge	zsh/plugins/oh-my-zsh/plugins/sprunge/sprunge.plugin.zsh	/^sprunge() {$/;"	f
src	zsh/plugins/oh-my-zsh/plugins/zsh_reload/zsh_reload.plugin.zsh	/^function src()$/;"	f
st_run	zsh/plugins/oh-my-zsh/plugins/sublime/sublime.plugin.zsh	/^            st_run() { $_sublime_path $@ >\/dev\/null 2>&1 &| }$/;"	f
st_run_sudo	zsh/plugins/oh-my-zsh/plugins/sublime/sublime.plugin.zsh	/^            st_run_sudo() {sudo $_sublime_path $@ >\/dev\/null 2>&1}$/;"	f
startSkipping	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^startSkipping()$/;"	f
start_agent_nossh	zsh/plugins/oh-my-zsh/plugins/gpg-agent/gpg-agent.plugin.zsh	/^function start_agent_nossh {$/;"	f
start_agent_withssh	zsh/plugins/oh-my-zsh/plugins/gpg-agent/gpg-agent.plugin.zsh	/^function start_agent_withssh {$/;"	f
status	zsh/plugins/oh-my-zsh/plugins/git-prompt/gitstatus.py	/^status = [(line[0], line[1], line[2:]) for line in stdout.decode('utf-8').splitlines()]$/;"	v
stub	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub() {$/;"	f
stub_and_echo	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_and_echo() {$/;"	f
stub_and_eval	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_and_eval() {$/;"	f
stub_called	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called() {$/;"	f
stub_called_at_least_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_at_least_times() {$/;"	f
stub_called_at_most_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_at_most_times() {$/;"	f
stub_called_exactly_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_exactly_times() {$/;"	f
stub_called_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_times() {$/;"	f
stub_called_with	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_with() {$/;"	f
stub_called_with_at_least_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_with_at_least_times() {$/;"	f
stub_called_with_at_most_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_with_at_most_times() {$/;"	f
stub_called_with_exactly_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_with_exactly_times() {$/;"	f
stub_called_with_times	zsh/plugins/zsh-autosuggestions/vendor/stub.sh/stub.sh	/^stub_called_with_times() {$/;"	f
subl	zsh/plugins/oh-my-zsh/plugins/sublime/sublime.plugin.zsh	/^            subl () { "$_sublime_path" $* }$/;"	f
suite_addTest	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2	/^suite_addTest()$/;"	f
svn_current_branch_name	zsh/plugins/oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_current_branch_name() {$/;"	f
svn_current_revision	zsh/plugins/oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_current_revision() {$/;"	f
svn_dirty	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty() {$/;"	f
svn_dirty_choose	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty_choose() {$/;"	f
svn_dirty_choose_pwd	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty_choose_pwd () {$/;"	f
svn_dirty_pwd	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty_pwd () {$/;"	f
svn_get_branch_name	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_get_branch_name() {$/;"	f
svn_get_repo_name	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_get_repo_name() {$/;"	f
svn_get_rev_nr	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_get_rev_nr() {$/;"	f
svn_prompt_info	zsh/plugins/oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_prompt_info() {$/;"	f
svn_prompt_info	zsh/plugins/oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_prompt_info() {$/;"	f
svn_repo_need_upgrade	zsh/plugins/oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_repo_need_upgrade() {$/;"	f
svn_repo_root_name	zsh/plugins/oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_repo_root_name() {$/;"	f
svn_status_info	zsh/plugins/oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_status_info() {$/;"	f
syn20	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^syn20() {$/;"	f
tab	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function tab() {$/;"	f
tag-the-release	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="tag-the-release" name="tag-the-release">Tag the Release<\/a><\/h2>$/;"	a
take	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function take() {$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^tearDown() {$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/test/widgets/clear_test.zsh	/^tearDown() {$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/test/widgets/execute_test.zsh	/^tearDown() {$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/test/widgets/modify_test.zsh	/^tearDown() {$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/test/widgets/partial_accept_test.zsh	/^tearDown() {$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/examples/mkdir_test.sh	/^tearDown()$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/mkdir_test.sh	/^tearDown()$/;"	f
tearDown	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/mkdir_test.sh	/^tearDown()$/;"	f
testAddTest	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testSuiteFx	/^testAddTest()$/;"	f
testAddTest	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testSuiteFx	/^testAddTest()$/;"	f
testAdding	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/math_test.sh	/^testAdding()$/;"	f
testAdding	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/math_test.sh	/^testAdding()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertEquals()$/;"	f
testAssertEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testAssertEquals()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertFalse()$/;"	f
testAssertFalse	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testAssertFalse()$/;"	f
testAssertNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertNotEquals()$/;"	f
testAssertNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testAssertNotEquals()$/;"	f
testAssertNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertNotEquals()$/;"	f
testAssertNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testAssertNotEquals()$/;"	f
testAssertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^testAssertNotNull()$/;"	f
testAssertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^testAssertNotNull()$/;"	f
testAssertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^testAssertNotNull()$/;"	f
testAssertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^testAssertNotNull()$/;"	f
testAssertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^testAssertNotNull()$/;"	f
testAssertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertNotNull()$/;"	f
testAssertNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertNotNull()$/;"	f
testAssertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^testAssertNotSame()$/;"	f
testAssertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^testAssertNotSame()$/;"	f
testAssertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^testAssertNotSame()$/;"	f
testAssertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^testAssertNotSame()$/;"	f
testAssertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^testAssertNotSame()$/;"	f
testAssertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertNotSame()$/;"	f
testAssertNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertNotSame()$/;"	f
testAssertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^testAssertNull()$/;"	f
testAssertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^testAssertNull()$/;"	f
testAssertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^testAssertNull()$/;"	f
testAssertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^testAssertNull()$/;"	f
testAssertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^testAssertNull()$/;"	f
testAssertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertNull()$/;"	f
testAssertNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertNull()$/;"	f
testAssertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^testAssertSame()$/;"	f
testAssertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^testAssertSame()$/;"	f
testAssertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^testAssertSame()$/;"	f
testAssertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^testAssertSame()$/;"	f
testAssertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^testAssertSame()$/;"	f
testAssertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertSame()$/;"	f
testAssertSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertSame()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testAsserts	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testAsserts	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testAsserts	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testAsserts	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_asserts.sh	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_asserts.sh	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_asserts.sh	/^testAssertTrue()$/;"	f
testAssertTrue	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testAssertTrue()$/;"	f
testBasicMatches	zsh/plugins/zsh-autosuggestions/test/strategies/default_test.zsh	/^testBasicMatches() {$/;"	f
testBasicMatches	zsh/plugins/zsh-autosuggestions/test/strategies/match_prev_cmd_test.zsh	/^testBasicMatches() {$/;"	f
testClear	zsh/plugins/zsh-autosuggestions/test/widgets/clear_test.zsh	/^testClear() {$/;"	f
testCursorAtEnd	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^testCursorAtEnd() {$/;"	f
testCursorMovesOutOfBuffer	zsh/plugins/zsh-autosuggestions/test/widgets/partial_accept_test.zsh	/^testCursorMovesOutOfBuffer() {$/;"	f
testCursorNotAtEnd	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^testCursorNotAtEnd() {$/;"	f
testCursorStaysInBuffer	zsh/plugins/zsh-autosuggestions/test/widgets/partial_accept_test.zsh	/^testCursorStaysInBuffer() {$/;"	f
testEquality	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/equality_test.sh	/^testEquality()$/;"	f
testEquality	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/party_test.sh	/^testEquality()$/;"	f
testEquality	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/equality_test.sh	/^testEquality()$/;"	f
testEquality	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/party_test.sh	/^testEquality()$/;"	f
testEscapeCharInStr	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^testEscapeCharInStr()$/;"	f
testEscapeCharInStr_specialChars	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^testEscapeCharInStr_specialChars()$/;"	f
testEscapeCommand	zsh/plugins/zsh-autosuggestions/test/suggestion_test.zsh	/^testEscapeCommand() {$/;"	f
testExistingDirectoryCreationFails	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/examples/mkdir_test.sh	/^testExistingDirectoryCreationFails()$/;"	f
testExistingDirectoryCreationFails	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/mkdir_test.sh	/^testExistingDirectoryCreationFails()$/;"	f
testExistingDirectoryCreationFails	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/mkdir_test.sh	/^testExistingDirectoryCreationFails()$/;"	f
testExtractTestFunctions	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^testExtractTestFunctions()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testFailures	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testFailures	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testFailures	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testFailures	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_failures.sh	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_failures.sh	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_failures.sh	/^testFail()$/;"	f
testFail	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testFail()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testFailures	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testFailures	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testFailures	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testFailures	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_failures.sh	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_failures.sh	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_failures.sh	/^testFailNotEquals()$/;"	f
testFailNotEquals	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testFailNotEquals()$/;"	f
testFailNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testFailures	/^testFailNotSame()$/;"	f
testFailNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testFailures	/^testFailNotSame()$/;"	f
testFailNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testFailures	/^testFailNotSame()$/;"	f
testFailNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testFailures	/^testFailNotSame()$/;"	f
testFailNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testFailNotSame()$/;"	f
testFailNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testFailNotSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testFailures	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testFailures	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/testFailures	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/testFailures	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_failures.sh	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_failures.sh	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_failures.sh	/^testFailSame()$/;"	f
testFailSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testFailSame()$/;"	f
testGenerateReport	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/testInternalFx	/^testGenerateReport()$/;"	f
testGenerateReport	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/testInternalFx	/^testGenerateReport()$/;"	f
testHighlightApplyWithSuggestion	zsh/plugins/zsh-autosuggestions/test/highlight_test.zsh	/^testHighlightApplyWithSuggestion() {$/;"	f
testHighlightApplyWithoutSuggestion	zsh/plugins/zsh-autosuggestions/test/highlight_test.zsh	/^testHighlightApplyWithoutSuggestion() {$/;"	f
testHighlightDefaultStyle	zsh/plugins/zsh-autosuggestions/test/highlight_test.zsh	/^testHighlightDefaultStyle() {$/;"	f
testHighlightReset	zsh/plugins/zsh-autosuggestions/test/highlight_test.zsh	/^testHighlightReset() {$/;"	f
testInvokeOriginalWidgetDefined	zsh/plugins/zsh-autosuggestions/test/bind_test.zsh	/^testInvokeOriginalWidgetDefined() {$/;"	f
testInvokeOriginalWidgetUndefined	zsh/plugins/zsh-autosuggestions/test/bind_test.zsh	/^testInvokeOriginalWidgetUndefined() {$/;"	f
testIssue7	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_misc.sh	/^testIssue7()$/;"	f
testIssue7	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^testIssue7()$/;"	f
testLineNo	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test_macros.sh	/^testLineNo()$/;"	f
testLineNo	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/lineno_test.sh	/^testLineNo()$/;"	f
testLineNo	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/lineno_test.sh	/^testLineNo()$/;"	f
testMatchMostRecentAfterPreviousCmd	zsh/plugins/zsh-autosuggestions/test/strategies/match_prev_cmd_test.zsh	/^testMatchMostRecentAfterPreviousCmd() {$/;"	f
testMissingDirectoryCreation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/examples/mkdir_test.sh	/^testMissingDirectoryCreation()$/;"	f
testMissingDirectoryCreation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/mkdir_test.sh	/^testMissingDirectoryCreation()$/;"	f
testMissingDirectoryCreation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/mkdir_test.sh	/^testMissingDirectoryCreation()$/;"	f
testModify	zsh/plugins/zsh-autosuggestions/test/widgets/modify_test.zsh	/^testModify() {$/;"	f
testModifyBufferTooLarge	zsh/plugins/zsh-autosuggestions/test/widgets/modify_test.zsh	/^testModifyBufferTooLarge() {$/;"	f
testMostRecentMatch	zsh/plugins/zsh-autosuggestions/test/strategies/default_test.zsh	/^testMostRecentMatch() {$/;"	f
testMostRecentMatch	zsh/plugins/zsh-autosuggestions/test/strategies/match_prev_cmd_test.zsh	/^testMostRecentMatch() {$/;"	f
testNoMatch	zsh/plugins/zsh-autosuggestions/test/strategies/default_test.zsh	/^testNoMatch() {$/;"	f
testNoMatch	zsh/plugins/zsh-autosuggestions/test/strategies/match_prev_cmd_test.zsh	/^testNoMatch() {$/;"	f
testNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testNotNull()$/;"	f
testNotNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testNotNull()$/;"	f
testNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testNotSame()$/;"	f
testNotSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testNotSame()$/;"	f
testNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testNull()$/;"	f
testNull	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testNull()$/;"	f
testParentDirectoryCreation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/examples/mkdir_test.sh	/^testParentDirectoryCreation()$/;"	f
testParentDirectoryCreation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/mkdir_test.sh	/^testParentDirectoryCreation()$/;"	f
testPartyLikeItIs1999	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/examples/party_test.sh	/^testPartyLikeItIs1999()$/;"	f
testPartyLikeItIs1999	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/party_test.sh	/^testPartyLikeItIs1999()$/;"	f
testPrepForSourcing	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^testPrepForSourcing()$/;"	f
testRecursiveDirectoryCreation	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/mkdir_test.sh	/^testRecursiveDirectoryCreation()$/;"	f
testRetval	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^testRetval() {$/;"	f
testRetval	zsh/plugins/zsh-autosuggestions/test/widgets/clear_test.zsh	/^testRetval() {$/;"	f
testRetval	zsh/plugins/zsh-autosuggestions/test/widgets/execute_test.zsh	/^testRetval() {$/;"	f
testRetval	zsh/plugins/zsh-autosuggestions/test/widgets/modify_test.zsh	/^testRetval() {$/;"	f
testRetval	zsh/plugins/zsh-autosuggestions/test/widgets/partial_accept_test.zsh	/^testRetval() {$/;"	f
testSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_macros.sh	/^testSame()$/;"	f
testSame	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_macros.sh	/^testSame()$/;"	f
testSpecialCharsForAllStrategies	zsh/plugins/zsh-autosuggestions/test/strategies_test.zsh	/^testSpecialCharsForAllStrategies() {$/;"	f
testStandalone	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_standalone.sh	/^testStandalone()$/;"	f
testUnboundVariable	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test_misc.sh	/^testUnboundVariable()$/;"	f
testUnboundVariable	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test_misc.sh	/^testUnboundVariable()$/;"	f
testViCursorAtEnd	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^testViCursorAtEnd() {$/;"	f
testViCursorNotAtEnd	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^testViCursorNotAtEnd() {$/;"	f
testWidget	zsh/plugins/zsh-autosuggestions/test/widgets/accept_test.zsh	/^testWidget() {$/;"	f
testWidget	zsh/plugins/zsh-autosuggestions/test/widgets/clear_test.zsh	/^testWidget() {$/;"	f
th_assertTrueWithNoOutput	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/examples/mkdir_test.sh	/^th_assertTrueWithNoOutput()$/;"	f
theme	zsh/plugins/oh-my-zsh/plugins/themes/themes.plugin.zsh	/^function theme$/;"	f
theme_chooser	zsh/plugins/oh-my-zsh/tools/theme_chooser.sh	/^function theme_chooser() {$/;"	f
theme_preview	zsh/plugins/oh-my-zsh/tools/theme_chooser.sh	/^function theme_preview() {$/;"	f
timewait20	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^timewait20() {$/;"	f
title	zsh/plugins/oh-my-zsh/lib/termsupport.zsh	/^function title {$/;"	f
tm	zsh/plugins/oh-my-zsh/plugins/textmate/textmate.plugin.zsh	/^function tm() {$/;"	f
tree	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^  tree () {$/;"	f
try_alias_value	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function try_alias_value() {$/;"	f
tt	zsh/plugins/oh-my-zsh/plugins/textastic/textastic.plugin.zsh	/^function tt() {$/;"	f
uninstall_oh_my_zsh	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function uninstall_oh_my_zsh() {$/;"	f
unmark	zsh/plugins/oh-my-zsh/plugins/jump/jump.plugin.zsh	/^unmark() {$/;"	f
up_widget	zsh/keybindings.sh	/^	function up_widget() {$/;"	f
update-version	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="update-version" name="update-version">Update Version<\/a><\/h2>$/;"	a
update-website	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="update-website" name="update-website">Update Website<\/a><\/h2>$/;"	a
update_current_git_vars	zsh/plugins/oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function update_current_git_vars() {$/;"	f
update_terminalapp_cwd	zsh/plugins/oh-my-zsh/lib/termsupport.zsh	/^  function update_terminalapp_cwd() {$/;"	f
upgrade	zsh/plugins/oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^  upgrade() {$/;"	f
upgrade_oh_my_zsh	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function upgrade_oh_my_zsh() {$/;"	f
urldecode	zsh/plugins/oh-my-zsh/plugins/urltools/urltools.plugin.zsh	/^    function urldecode() {printf $(echo -n $@ | sed 's\/\\\\\/\\\\\\\\\/g;s\/\\(%\\)\\([0-9a-fA-F][0-9a-fA-F]\\)\/\\\\x\\2\/g')"\\n"}$/;"	f
urlencode	zsh/plugins/oh-my-zsh/plugins/urltools/urltools.plugin.zsh	/^    function urlencode() {echo $@ | tr -d "\\n" | xxd -plain | sed "s\/\\(..\\)\/%\\1\/g"}$/;"	f
usage	zsh/plugins/oh-my-zsh/plugins/sprunge/sprunge.plugin.zsh	/^usage() {$/;"	f
usage	zsh/plugins/oh-my-zsh/tools/require_tool.sh	/^usage() {$/;"	f
usage	zsh/plugins/oh-my-zsh/tools/theme_chooser.sh	/^function usage() {$/;"	f
usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.0.3/src/test/run-test-suite	/^usage()$/;"	f
usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.1/src/test/run-test-suite	/^usage()$/;"	f
usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.2/src/test/run-test-suite	/^usage()$/;"	f
usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/src/test/run-test-suite	/^usage()$/;"	f
usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.4/src/shell/shunit2_test.sh	/^usage()$/;"	f
usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/src/shell/shunit2_test.sh	/^usage()$/;"	f
usage	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/src/shunit2_test.sh	/^usage()$/;"	f
use_env	zsh/plugins/oh-my-zsh/plugins/autoenv/autoenv.plugin.zsh	/^use_env() {$/;"	f
versions_main	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_main()$/;"	f
versions_main	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_main()$/;"	f
versions_osName	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_osName()$/;"	f
versions_osName	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_osName()$/;"	f
versions_osVersion	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_osVersion()$/;"	f
versions_osVersion	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_osVersion()$/;"	f
versions_shellVersion	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_shellVersion()$/;"	f
versions_shellVersion	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_shellVersion()$/;"	f
versions_shell_bash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_shell_bash()$/;"	f
versions_shell_bash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_shell_bash()$/;"	f
versions_shell_dash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_shell_dash()$/;"	f
versions_shell_dash	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_shell_dash()$/;"	f
versions_shell_ksh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_shell_ksh()$/;"	f
versions_shell_ksh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_shell_ksh()$/;"	f
versions_shell_pdksh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_shell_pdksh()$/;"	f
versions_shell_pdksh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_shell_pdksh()$/;"	f
versions_shell_zsh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.5/lib/versions	/^versions_shell_zsh()$/;"	f
versions_shell_zsh	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.6/lib/versions	/^versions_shell_zsh()$/;"	f
vi_mode_prompt_info	zsh/plugins/oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function vi_mode_prompt_info() {$/;"	f
vi_mode_prompt_info	zsh/plugins/vi-mode.plugin.zsh	/^function vi_mode_prompt_info() {$/;"	f
vimplug_exists	nvim/init.vim	/^let vimplug_exists=expand('~\/.config\/nvim\/autoload\/plug.vim')$/;"	v
vimplug_exists	vim/vimrc.vim	/^let vimplug_exists=expand('~\/.vim\/autoload\/plug.vim')$/;"	v
vimrc	nvim/init.vim	/^augroup vimrc-javascript$/;"	a
vimrc	nvim/init.vim	/^augroup vimrc-make-cmake$/;"	a
vimrc	nvim/init.vim	/^augroup vimrc-python$/;"	a
vimrc	nvim/init.vim	/^augroup vimrc-remember-cursor-position$/;"	a
vimrc	nvim/init.vim	/^augroup vimrc-ruby$/;"	a
vimrc	nvim/init.vim	/^augroup vimrc-sync-fromstart$/;"	a
vimrc	nvim/init.vim	/^augroup vimrc-wrapping$/;"	a
vimrc	vim/vimrc.vim	/^augroup vimrc-javascript$/;"	a
vimrc	vim/vimrc.vim	/^augroup vimrc-make-cmake$/;"	a
vimrc	vim/vimrc.vim	/^augroup vimrc-python$/;"	a
vimrc	vim/vimrc.vim	/^augroup vimrc-remember-cursor-position$/;"	a
vimrc	vim/vimrc.vim	/^augroup vimrc-ruby$/;"	a
vimrc	vim/vimrc.vim	/^augroup vimrc-sync-fromstart$/;"	a
vimrc	vim/vimrc.vim	/^augroup vimrc-wrapping$/;"	a
virtualenv_prompt_info	zsh/plugins/oh-my-zsh/plugins/virtualenv/virtualenv.plugin.zsh	/^function virtualenv_prompt_info(){$/;"	f
visitpage20	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^visitpage20() {$/;"	f
vncviewer	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function vncviewer() {$/;"	f
vsplit_tab	zsh/plugins/oh-my-zsh/plugins/osx/osx.plugin.zsh	/^function vsplit_tab() {$/;"	f
vundle	zsh/plugins/oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle () {$/;"	f
vundle	zsh/plugins/oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle-clean () {$/;"	f
vundle	zsh/plugins/oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle-init () {$/;"	f
vundle	zsh/plugins/oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle-update () {$/;"	f
wQ	nvim/init.vim	/^cnoreabbrev wQ wq$/;"	m
wQ	vim/vimrc.vim	/^cnoreabbrev wQ wq$/;"	m
wake	zsh/plugins/oh-my-zsh/plugins/wakeonlan/wakeonlan.plugin.zsh	/^function wake() {$/;"	f
wd	zsh/plugins/oh-my-zsh/plugins/wd/wd.plugin.zsh	/^wd() {$/;"	f
wd_add	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_add()$/;"	f
wd_clean	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_clean() {$/;"	f
wd_exit_fail	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_exit_fail()$/;"	f
wd_exit_warn	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_exit_warn()$/;"	f
wd_getdir	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_getdir()$/;"	f
wd_list_all	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_list_all()$/;"	f
wd_ls	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_ls()$/;"	f
wd_path	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_path()$/;"	f
wd_print_msg	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_print_msg()$/;"	f
wd_print_usage	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_print_usage()$/;"	f
wd_remove	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_remove()$/;"	f
wd_show	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_show()$/;"	f
wd_warp	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_warp()$/;"	f
wd_yesorno	zsh/plugins/oh-my-zsh/plugins/wd/wd.sh	/^wd_yesorno()$/;"	f
web_search	zsh/plugins/oh-my-zsh/plugins/web-search/web-search.plugin.zsh	/^function web_search() {$/;"	f
webtraffic	zsh/plugins/oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^webtraffic() {$/;"	f
work_in_progress	zsh/plugins/oh-my-zsh/plugins/git/git.plugin.zsh	/^function work_in_progress() {$/;"	f
workon_cwd	zsh/plugins/oh-my-zsh/plugins/virtualenvwrapper/virtualenvwrapper.plugin.zsh	/^  function workon_cwd {$/;"	f
write-release-notes	zsh/plugins/zsh-autosuggestions/vendor/shunit2/2.1.3/doc/README.html	/^<h2><a id="write-release-notes" name="write-release-notes">Write Release Notes<\/a><\/h2>$/;"	a
xc	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function xc {$/;"	f
xcselv	zsh/plugins/oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function xcselv {$/;"	f
zle	zsh/plugins/oh-my-zsh/lib/key-bindings.zsh	/^  function zle-line-finish() {$/;"	f
zle	zsh/plugins/oh-my-zsh/lib/key-bindings.zsh	/^  function zle-line-init() {$/;"	f
zle	zsh/plugins/oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function zle-keymap-select() {$/;"	f
zle	zsh/plugins/vi-mode.plugin.zsh	/^function zle-keymap-select() {$/;"	f
zsh_stats	zsh/plugins/oh-my-zsh/lib/functions.zsh	/^function zsh_stats() {$/;"	f
